{"version":3,"file":"animation-timeline.js","mappings":"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A;EACEU,MAAM,EAAE,GAAG;EACX;AACF;AACA;EACEC,OAAO,EAAE,IAAI;EACbC,WAAW,EAAE,EAAE;EACf;AACF;AACA;EACEC,QAAQ,EAAE,GAAG;EACb;AACF;AACA;EACEC,UAAU,EAAE,EAAE;EACdC,eAAe,EAAE,SAAS;EAC1BvF,SAAS,EAAE,SAAS;EAEpBwF,WAAW,EAAE,SAAS;EACtB;AACF;AACA;EACEC,SAAS,EAAE,SAAS;EACpB;AACF;AACA;EACEC,cAAc,EAAE,OAAO;EAEvB;AACF;AACA;AACA;EACE3D,SAAS,EAAEvB,uBAAuB;EAElC;AACF;AACA;AACA;EACEE,cAAc,EAAET,4BAA4B;EAC5C;AACF;AACA;EACEU,WAAW,EAAEb,iBAAiB;EAC9B;AACF;AACA;EACEkC,YAAY,EAAE,EAAE;EAChB2D,IAAI,EAAE,iBAAiB;EACvB;AACF;AACA;EACEC,IAAI,EAAE,CAAC;EACP;AACF;AACA;EACEC,SAAS,EAAE,GAAG;EACd;AACF;AACA;EACEC,OAAO,EAAE,GAAG;EACZ;AACF;AACA;EACEC,OAAO,EAAE,CAAC;EACV;AACF;AACA;EACEC,mBAAmB,EAAE,KAAK;EAC1B;AACF;AACA;EACEC,oBAAoB,EAAE,kBAAkB;EACxC;AACF;AACA;EACE3D,eAAe,EAAE,IAAI;EACrB;AACF;AACA;EACED,kBAAkB,EAAE,IAAI;EACxB;AACF;AACA;EACE6D,iBAAiB,EAAE,IAAI;EACvB;AACF;AACA;AACA;EACE5J,GAAG,EAAE,CAAC;EACN;AACF;AACA;EACEC,GAAG,EAAE1B,MAAM,CAACsL;AACd,CAAoB;;;;;;;;;;;;;;;;;;;;;;;;ACpHpB;AACA;;AAEgE;AAWA;AACV;AAQgB;;AAEtE;;AAMA;AAC2F;AACR;AACN;AAEN;AACF;;AAErE;AACsE;AACI;AACR;AACF;AACJ;AACM;AACI;AACd;AACxD;;AAEoE;AACc;AACE;AAE7E,IAAMC,QAAQ;EAAA;EAAA;EACnB;AACF;AACA;;EAEE;AACF;AACA;;EAEE;AACF;AACA;;EAEE;AACF;AACA;AACA;;EAEE;AA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","sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/timelineEventsEmitter.ts","webpack:///./src/enums/timelineKeyframeShape.ts","webpack:///./src/utils/timelineUtils.ts","webpack:///./src/settings/defaults/defaultGroupStyle.ts","webpack:///./src/settings/defaults/defaultTimelineKeyframeStyle.ts","webpack:///./src/settings/defaults/defaultTimelineRowStyle.ts","webpack:///./src/utils/timelineStyleUtils.ts","webpack:///./src/enums/timelineElementType.ts","webpack:///./src/utils/timelineDraggableData.ts","webpack:///./src/utils/events/timelineBaseEvent.ts","webpack:///./src/utils/events/timelineKeyframeChangedEvent.ts","webpack:///./src/enums/timelineEventSource.ts","webpack:///./src/utils/events/timelineTimeChangedEvent.ts","webpack:///./src/enums/timelineSelectionEventSource.ts","webpack:///./src/utils/events/timelineSelectedEvent.ts","webpack:///./src/utils/events/timelineClickEvent.ts","webpack:///./src/utils/events/timelineDragEvent.ts","webpack:///./src/enums/timelineInteractionMode.ts","webpack:///./src/enums/timelineCursorType.ts","webpack:///./src/enums/timelineCapShape.ts","webpack:///./src/enums/timelineSelectionMode.ts","webpack:///./src/enums/timelineEvents.ts","webpack:///./src/enums/timelineScrollSource.ts","webpack:///./src/settings/defaults/defaultTimelineConsts.ts","webpack:///./src/settings/defaults/defaultTimelineStyle.ts","webpack:///./src/settings/defaults/defaultTimelineOptions.ts","webpack:///./src/timeline.ts","webpack:///./src/animation-timeline.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"timelineModule\"] = factory();\n\telse\n\t\troot[\"timelineModule\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* eslint-disable  @typescript-eslint/no-explicit-any */\ninterface TimelineEvent {\n  topic: string;\n  callback: (args: any) => void;\n}\n\n/**\n * Timeline events emitter.\n */\nexport class TimelineEventsEmitter {\n  /**\n   * Active events subscriptions.\n   */\n  _subscriptions: TimelineEvent[] = [];\n\n  /**\n   * Subscribe event.\n   * @param topic event name.\n   * @param callback callback to be added.\n   */\n  on<T>(topic: string, callback: (args: T) => void): boolean {\n    if (!callback) {\n      return false;\n    }\n\n    this._subscriptions.push({\n      topic: topic,\n      callback: callback,\n    } as TimelineEvent);\n    return true;\n  }\n  /**\n   * Remove an event from the subscriptions list.\n   */\n  off<T>(topic: string, callback: (args: T) => void): boolean {\n    const before = this._subscriptions.length;\n    this._subscriptions = this._subscriptions.filter((event) => {\n      return event && event.callback != callback && event.topic != topic;\n    });\n    return before !== this._subscriptions.length;\n  }\n\n  /**\n   * Unsubscribe all\n   */\n  offAll(): void {\n    // Remove all callbacks from array.\n    this._subscriptions.length = 0;\n  }\n\n  /**\n   * Emit event.\n   * @param topic Event name.\n   * @param args Event arguments.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  emit<T>(topic: string, args: T): void {\n    this._subscriptions.forEach((event) => {\n      if (event?.topic === topic && event?.callback) {\n        event.callback(args);\n      }\n    });\n  }\n}\n","export enum TimelineKeyframeShape {\n  None = 'none',\n  Rhomb = 'rhomb',\n  Circle = 'circle',\n  Rect = 'rect',\n}\n","import { TimelineRanged } from '../models/timelineRanged';\nimport { TimelineOptions } from '../settings/timelineOptions';\n\nconst denominators = [1, 2, 5, 10];\nexport class TimelineUtils {\n  static drawLine(ctx: CanvasRenderingContext2D, x1: number, y1: number, x2: number, y2: number): void {\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n  }\n  /**\n   * Check is valid number.\n   */\n  static isNumber(val?: number | null): boolean {\n    if (typeof val === 'number' && (val || val === 0) && !isNaN(val) && Number.isFinite(val)) {\n      return true;\n    }\n\n    return false;\n  }\n  static deleteElement<T>(array: Array<T>, element: T): Array<T> {\n    const index: number = array.indexOf(element);\n    if (index !== -1) {\n      return array.splice(index, 1);\n    }\n    return array;\n  }\n\n  /**\n   * Check rectangle overlap x,y\n   */\n  static isOverlap(x: number, y: number, rectangle: DOMRect): boolean {\n    if (!rectangle) {\n      return false;\n    }\n\n    if (rectangle.x <= x && rectangle.x + rectangle.width >= x && rectangle.y <= y && rectangle.y + rectangle.height >= y) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Find beautiful step for the header line gauge.\n   */\n  static findGoodStep(originalStep: number, divisionCheck = 0): number {\n    if (originalStep <= 0 || isNaN(originalStep) || !Number.isFinite(originalStep)) {\n      return originalStep;\n    }\n    let step = originalStep;\n    let lastDistance = null;\n    const pow = TimelineUtils.getPowArgument(originalStep);\n    for (let i = 0; i < denominators.length; i++) {\n      const denominator = denominators[i];\n      const calculatedStep = denominator * Math.pow(10, pow);\n      if (divisionCheck && divisionCheck % calculatedStep != 0) {\n        continue;\n      }\n      const distance = TimelineUtils.getDistance(originalStep, calculatedStep);\n\n      if (distance == 0 || (distance <= 0.1 && pow > 0)) {\n        lastDistance = distance;\n        step = calculatedStep;\n        break;\n      } else if (!lastDistance || lastDistance > distance) {\n        lastDistance = distance;\n        step = calculatedStep;\n      }\n    }\n\n    return step;\n  }\n  /**\n   * Keep value in min, max bounds.\n   */\n  static keepInBounds(value: number, min: number | null | undefined = null, max: number | null | undefined = null): number {\n    if (TimelineUtils.isNumber(value)) {\n      if (TimelineUtils.isNumber(min) && (min || min === 0)) {\n        value = Math.max(value, min);\n      }\n      if (TimelineUtils.isNumber(max) && (max || max === 0)) {\n        value = Math.min(value, max);\n      }\n    }\n\n    return value;\n  }\n  static setMinMax(to: TimelineRanged, from: TimelineRanged | null, shrink = false): TimelineRanged {\n    if (!from || !to) {\n      return to;\n    }\n    const fromMin = from ? from.min : Number.NaN;\n    const toMin = to.min;\n    const isFromMinNumber = (fromMin || fromMin === 0) && TimelineUtils.isNumber(fromMin);\n    const isToMinNumber = (toMin || toMin === 0) && TimelineUtils.isNumber(toMin);\n    // get absolute min and max bounds:\n    if (isFromMinNumber && isToMinNumber) {\n      to.min = shrink ? Math.min(fromMin, toMin) : Math.max(fromMin, toMin);\n    } else if (isFromMinNumber) {\n      to.min = fromMin;\n    }\n    const fromMax = from ? from.max : Number.NaN;\n    const toMax = to.max;\n    const isFromMaxNumber = (fromMax || fromMax === 0) && TimelineUtils.isNumber(fromMax);\n    const isToMaxNumber = (toMax || toMax === 0) && TimelineUtils.isNumber(toMax);\n    if (isFromMaxNumber && isToMaxNumber) {\n      to.max = shrink ? Math.max(fromMax, toMax) : Math.min(fromMax, toMax);\n    } else if (isFromMaxNumber) {\n      to.max = fromMax;\n    }\n\n    return to;\n  }\n  static shrinkSelf(rect: DOMRect, value: number): DOMRect {\n    if (!rect) {\n      return rect;\n    }\n    rect.x -= value;\n    rect.y -= value;\n    rect.width += value;\n    rect.height += value;\n    return rect;\n  }\n  /**\n   * Check whether rectangle intersects another rectangle\n   */\n  static isRectIntersects(rect: DOMRect, rect2: DOMRect, touch = false): boolean {\n    if (!rect || !rect2) {\n      console.log('Rectangles cannot be empty');\n      return false;\n    }\n    const right = rect2.x + rect2.width;\n    const bottom = rect2.y + rect2.height;\n    if (touch) {\n      if (\n        // Left\n        rect.x <= right &&\n        // Right\n        rect2.x <= rect.x + rect.width &&\n        // Top\n        rect.y <= bottom &&\n        // Bottom\n        rect2.y <= rect.y + rect.height\n      ) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      if (\n        // Left\n        rect.x < right &&\n        // Right\n        rect2.x < rect.x + rect.width &&\n        // Top\n        rect.y < bottom &&\n        // Bottom\n        rect2.y < rect.y + rect.height\n      ) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  static getDistance(x1: number, y1: number, x2?: number, y2?: number): number {\n    if (x2 != undefined && y2 != undefined) {\n      return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n    } else {\n      return Math.abs(x1 - y1);\n    }\n  }\n\n  /**\n   * Get sign of the number. 1 or -1.\n   */\n  static sign(p: number): number {\n    return p >= 0 ? 1 : -1;\n  }\n\n  /**\n   * Clear browser text selection.\n   */\n  static clearBrowserSelection(): void {\n    if (!window) {\n      return;\n    }\n    if (window.getSelection) {\n      const selection = window.getSelection();\n      if (selection) {\n        selection.removeAllRanges();\n      }\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const doc: any = window.document;\n      if (doc.selection) {\n        doc.selection.empty();\n      }\n    }\n  }\n  static getPowArgument(toCheck: number): number {\n    if (!toCheck || toCheck === 0 || !isFinite(toCheck)) {\n      return 1;\n    }\n    // some optimization for numbers:\n    if (toCheck >= 10 && toCheck < 100) {\n      return 1;\n    } else if (toCheck >= 100 && toCheck < 1000) {\n      return 2;\n    } else if (toCheck >= 1000 && toCheck < 10000) {\n      return 3;\n    }\n\n    toCheck = Math.abs(toCheck);\n    let category = 0;\n    const s = this.sign(toCheck);\n    if (toCheck > 1) {\n      while (toCheck >= 1) {\n        toCheck = Math.floor(toCheck / 10.0);\n        category++;\n      }\n\n      return s * category - 1;\n    } else if (toCheck > 0.0) {\n      // Get number of zeros before the number.\n      const zerosCount = Math.floor(Math.log(toCheck) / Math.log(10) + 1) - 1;\n      return zerosCount;\n    } else {\n      return 1;\n    }\n  }\n\n  static deepClone = <T>(previousOptions: T): T => {\n    return JSON.parse(JSON.stringify(previousOptions)) as T;\n  };\n\n  static cloneOptions = (previousOptions: TimelineOptions): TimelineOptions => {\n    const clonedValue = JSON.parse(\n      JSON.stringify(previousOptions, (key, value) => {\n        // No need to clone HTML element passed as ID.\n        return key === 'id' ? undefined : value;\n      }),\n    );\n    clonedValue.id = previousOptions.id;\n    return clonedValue;\n  };\n  /**\n   * Merge options. New keys will be added.\n   */\n  static mergeOptions(previousOptions: TimelineOptions, newOptions: TimelineOptions): TimelineOptions {\n    newOptions = newOptions || ({} as TimelineOptions);\n    // Apply incoming options to default. (override default)\n    // Deep clone default options:\n    const toArg = TimelineUtils.cloneOptions(previousOptions);\n    // Merge options with the default.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const mergeOptionsDeep = (to: any, from: any): void => {\n      if (!to || !from) {\n        return;\n      }\n      // eslint-disable-next-line prefer-const\n      for (let key in from) {\n        if (Object.prototype.hasOwnProperty.call(from, key)) {\n          if (from[key] !== undefined) {\n            if (typeof from[key] === 'object') {\n              if (key === 'id') {\n                if (from[key] && from[key] !== to[key]) {\n                  to[key] = from[key];\n                }\n              } else {\n                if (!to[key]) {\n                  to[key] = from[key];\n                } else {\n                  mergeOptionsDeep(to[key], from[key]);\n                }\n              }\n            } else {\n              to[key] = from[key];\n            }\n          }\n        }\n      }\n    };\n\n    mergeOptionsDeep(toArg, newOptions);\n    return toArg;\n  }\n}\n","import { TimelineGroupStyle } from '../styles/timelineGroupStyle';\nexport const defaultRowHeight = 24;\nconst margin = 4;\nexport const defaultGroupStyle = {\n  height: 'auto',\n  marginTop: margin,\n  /**\n   * Default group fill color.\n   */\n  fillColor: '#094771',\n} as TimelineGroupStyle;\n","import { TimelineKeyframeShape } from '../../enums/timelineKeyframeShape';\nimport { TimelineKeyframeStyle } from '../styles/timelineKeyframeStyle';\n\nexport const defaultTimelineKeyframeStyle = {\n  /**\n   * keyframe fill color.\n   */\n  fillColor: 'DarkOrange',\n  shape: TimelineKeyframeShape.Rhomb,\n  /**\n   * Selected keyframe fill color.\n   */\n  selectedFillColor: 'red',\n  strokeColor: 'black',\n  selectedStrokeColor: 'black',\n  strokeThickness: 0.2,\n  height: 'auto',\n  width: 'auto',\n} as TimelineKeyframeStyle;\n","import { TimelineRowStyle } from '../styles/timelineRowStyle';\nimport { defaultGroupStyle, defaultRowHeight } from './defaultGroupStyle';\nimport { defaultTimelineKeyframeStyle } from './defaultTimelineKeyframeStyle';\n\nexport const defaultTimelineRowStyle = {\n  /**\n   * Row height in pixels.\n   */\n  height: defaultRowHeight,\n  marginBottom: 2,\n  fillColor: '#252526',\n  /**\n   * Style for the all keyframes in a current row.\n   * Individual keyframe can have own style.\n   */\n  keyframesStyle: defaultTimelineKeyframeStyle,\n  /**\n   * Style of the groups.\n   */\n  groupsStyle: defaultGroupStyle,\n} as TimelineRowStyle;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { TimelineOptions } from '../settings/timelineOptions';\nimport { TimelineRowStyle } from '../settings/styles/timelineRowStyle';\nimport { TimelineKeyframeShape } from '../enums/timelineKeyframeShape';\nimport { TimelineUtils } from './timelineUtils';\nimport { TimelineGroupStyle } from '../settings/styles/timelineGroupStyle';\nimport { TimelineKeyframe } from '../models/timelineKeyframe';\n\nimport { TimelineGroup } from '../models/timelineGroup';\nimport { TimelineRow } from '../models/timelineRow';\nimport { defaultGroupStyle } from '../settings/defaults/defaultGroupStyle';\nimport { defaultTimelineKeyframeStyle } from '../settings/defaults/defaultTimelineKeyframeStyle';\nimport { defaultTimelineRowStyle } from '../settings/defaults/defaultTimelineRowStyle';\n\nconst undefinedConst = typeof undefined;\n\n// TODO: create merged style for each element instead of getting per property.\nexport class TimelineStyleUtils {\n  static getGroup(groupModel: TimelineGroup | string | null | undefined): TimelineGroup | null {\n    const style = groupModel;\n    if (style && typeof style === 'string') {\n      return null;\n    }\n    return (style || null) as TimelineGroup;\n  }\n  static getGroupStyle(groupModel: TimelineGroup | string | null | undefined): TimelineGroupStyle | null {\n    return TimelineStyleUtils.getGroup(groupModel)?.style || null;\n  }\n  static getFirstSet<T>(defaultValue: T, ...params: Array<T | undefined | null>): T {\n    return TimelineStyleUtils.getValue(defaultValue, false, ...params);\n  }\n  /**\n   * Get first value set or default.\n   * @param defaultValue default value in a case when no value is set.\n   * @param returnFalseIfAnyFalse - find first negative bool and return false.\n   * @param params collection of values to check.\n   * @returns value.\n   */\n  static getValue<T>(defaultValue: T, returnFalseIfAnyFalse = false, ...params: Array<T | undefined | null>): T {\n    const valuesFound: T[] = [];\n    let found = false;\n    params.forEach((value: T | undefined | null) => {\n      if (found) {\n        return;\n      }\n      if (typeof value === undefinedConst) {\n        return;\n      } else if (typeof value === 'number') {\n        if (!TimelineUtils.isNumber(value)) {\n          return;\n        }\n      } else if (typeof value === 'boolean') {\n        valuesFound.push(value as T);\n        // No need to search for other values. First false is turning off current bool functionality.\n        if (returnFalseIfAnyFalse && value === false) {\n          found = true;\n        }\n        return;\n      } else if (!value) {\n        return;\n      }\n      valuesFound.push(value as T);\n    });\n    const toReturn = valuesFound && valuesFound.length > 0 ? valuesFound[0] : defaultValue;\n    if (found) {\n      return false as T;\n    }\n    return TimelineStyleUtils.getValueOrDefault(toReturn, defaultValue) as T;\n  }\n\n  static getValueOrDefault<T>(value: T, defaultValue: T): T | undefined {\n    if (typeof value === undefinedConst) {\n      return defaultValue;\n    } else if (typeof value == 'boolean') {\n      // variable is a boolean\n      return value as T;\n    } else if (typeof value == 'number') {\n      // variable is a boolean\n      if (value || value === 0) {\n        return value as T;\n      } else {\n        return defaultValue;\n      }\n    }\n    return value || defaultValue;\n  }\n  static keyframeWidth(\n    keyframe: TimelineKeyframe | null | undefined,\n    group: TimelineGroup | string | null | undefined,\n    rowStyle: TimelineRowStyle | null | undefined,\n    options: TimelineOptions | null | undefined,\n  ): number | string {\n    return TimelineStyleUtils.getFirstSet(\n      // default value\n      defaultTimelineKeyframeStyle.width || '',\n      keyframe?.style?.width,\n      // exact style\n      TimelineStyleUtils.getGroupStyle(group)?.keyframesStyle?.width,\n      rowStyle?.keyframesStyle?.width,\n      rowStyle?.groupsStyle?.keyframesStyle?.width,\n      // global styles\n      options?.rowsStyle?.groupsStyle?.keyframesStyle?.width,\n      // default keyframe style\n      options?.rowsStyle?.keyframesStyle?.width,\n    );\n  }\n  static keyframeHeight(\n    keyframe: TimelineKeyframe | null | undefined,\n    group: TimelineGroup | string | null | undefined,\n    rowStyle: TimelineRowStyle | null | undefined,\n    options: TimelineOptions | null | undefined,\n  ): number | string {\n    return TimelineStyleUtils.getFirstSet(\n      // default value\n      defaultTimelineKeyframeStyle.height || '',\n      keyframe?.style?.height,\n      // exact style\n      TimelineStyleUtils.getGroupStyle(group)?.keyframesStyle?.height,\n      rowStyle?.keyframesStyle?.height,\n      rowStyle?.groupsStyle?.keyframesStyle?.height,\n      // global styles\n      options?.rowsStyle?.groupsStyle?.keyframesStyle?.height,\n      // default keyframe style\n      options?.rowsStyle?.keyframesStyle?.height,\n    );\n  }\n  static keyframeShape(keyframe: TimelineKeyframe | null, group: TimelineGroup | string | null | undefined, rowStyle: TimelineRowStyle | null, options: TimelineOptions | null): TimelineKeyframeShape {\n    const defaultValue = defaultTimelineKeyframeStyle.shape || TimelineKeyframeShape.Rhomb;\n    return TimelineStyleUtils.getFirstSet(\n      // default value\n      defaultValue,\n      // exact style\n      keyframe?.style?.shape,\n      // style set by keyframe group\n      TimelineStyleUtils.getGroupStyle(group)?.keyframesStyle?.shape,\n      // style from the keyframe group\n      rowStyle?.groupsStyle?.keyframesStyle?.shape,\n      // style set by keyframe style\n      rowStyle?.keyframesStyle?.shape,\n      // style set by keyframe group style, applied when group is set\n      group ? options?.rowsStyle?.groupsStyle?.keyframesStyle?.shape : undefined,\n      // Style set by global options\n      options?.rowsStyle?.keyframesStyle?.shape,\n    );\n  }\n  static keyframeFillColor(keyframe: TimelineKeyframe | null, group: TimelineGroup | string | null | undefined, rowStyle: TimelineRowStyle | null, options: TimelineOptions | null): string {\n    const defaultValue = defaultTimelineKeyframeStyle.fillColor || '';\n    return TimelineStyleUtils.getFirstSet(\n      // default value\n      defaultValue,\n      // exact style\n      keyframe?.style?.fillColor,\n      // style set by keyframe group\n      TimelineStyleUtils.getGroupStyle(group)?.keyframesStyle?.fillColor,\n      // style from the keyframe group\n      rowStyle?.groupsStyle?.keyframesStyle?.fillColor,\n      // style set by keyframe style\n      rowStyle?.keyframesStyle?.fillColor,\n      // style set by keyframe group style, applied when group is set\n      group ? options?.rowsStyle?.groupsStyle?.keyframesStyle?.fillColor : undefined,\n      // Style set by global options\n      options?.rowsStyle?.keyframesStyle?.fillColor,\n    );\n  }\n  static keyframeSelectedFillColor(keyframe: TimelineKeyframe | null, group: TimelineGroup | string | null | undefined, rowStyle: TimelineRowStyle | null, options: TimelineOptions | null): string {\n    const defaultValue = defaultTimelineKeyframeStyle.selectedFillColor || '';\n    return TimelineStyleUtils.getFirstSet(\n      // default value\n      defaultValue,\n      // exact style\n      keyframe?.style?.selectedFillColor,\n      // style set by keyframe group\n      TimelineStyleUtils.getGroupStyle(group)?.keyframesStyle?.selectedFillColor,\n      // style from the keyframe group\n      rowStyle?.groupsStyle?.keyframesStyle?.selectedFillColor,\n      // style set by keyframe style\n      rowStyle?.keyframesStyle?.selectedFillColor,\n      // style set by keyframe group style, applied when group is set\n      group ? options?.rowsStyle?.groupsStyle?.keyframesStyle?.selectedFillColor : undefined,\n      // Style set by global options\n      options?.rowsStyle?.keyframesStyle?.selectedFillColor,\n    );\n  }\n\n  static keyframeStrokeThickness(keyframe: TimelineKeyframe | null, group: TimelineGroup | string | null | undefined, rowStyle: TimelineRowStyle | null, options: TimelineOptions | null): number {\n    const defaultValue = defaultTimelineKeyframeStyle.strokeThickness || 0;\n    return TimelineStyleUtils.getFirstSet(\n      // default value\n      defaultValue,\n      // exact style\n      keyframe?.style?.strokeThickness,\n      // style set by keyframe group\n      TimelineStyleUtils.getGroupStyle(group)?.keyframesStyle?.strokeThickness,\n      // style from the keyframe group\n      rowStyle?.groupsStyle?.keyframesStyle?.strokeThickness,\n      // style set by keyframe style\n      rowStyle?.keyframesStyle?.strokeThickness,\n      // style set by keyframe group style, applied when group is set\n      group ? options?.rowsStyle?.groupsStyle?.keyframesStyle?.strokeThickness : undefined,\n      // Style set by global options\n      options?.rowsStyle?.keyframesStyle?.strokeThickness,\n    );\n  }\n\n  static keyframeStrokeColor(keyframe: TimelineKeyframe | null, group: TimelineGroup | string | null | undefined, rowStyle: TimelineRowStyle | null, options: TimelineOptions | null): string {\n    const defaultValue = defaultTimelineKeyframeStyle.strokeColor || '';\n    return TimelineStyleUtils.getFirstSet(\n      // default value\n      defaultValue,\n      // exact style\n      keyframe?.style?.strokeColor,\n      // style set by keyframe group\n      TimelineStyleUtils.getGroupStyle(group)?.keyframesStyle?.strokeColor,\n      // style from the keyframe group\n      rowStyle?.groupsStyle?.keyframesStyle?.strokeColor,\n      // style set by keyframe style\n      rowStyle?.keyframesStyle?.strokeColor,\n      // style set by keyframe group style, applied when group is set\n      group ? options?.rowsStyle?.groupsStyle?.keyframesStyle?.strokeColor : undefined,\n      // Style set by global options\n      options?.rowsStyle?.keyframesStyle?.strokeColor,\n    );\n  }\n  static keyframeSelectedStrokeColor(keyframe: TimelineKeyframe | null, group: TimelineGroup | string | null, rowStyle: TimelineRowStyle | null, options: TimelineOptions | null): string {\n    const defaultValue = defaultTimelineKeyframeStyle.selectedStrokeColor || '';\n    return TimelineStyleUtils.getFirstSet(\n      // default value\n      defaultValue,\n      // exact style\n      keyframe?.style?.selectedStrokeColor,\n      // style set by keyframe group\n      TimelineStyleUtils.getGroupStyle(group)?.keyframesStyle?.selectedStrokeColor,\n      // style from the keyframe group\n      rowStyle?.groupsStyle?.keyframesStyle?.selectedStrokeColor,\n      // style set by keyframe style\n      rowStyle?.keyframesStyle?.selectedStrokeColor,\n      // style set by keyframe group style, applied when group is set\n      group ? options?.rowsStyle?.groupsStyle?.keyframesStyle?.selectedStrokeColor : undefined,\n      // Style set by global options\n      options?.rowsStyle?.keyframesStyle?.selectedStrokeColor,\n    );\n  }\n\n  static groupHeight(options: TimelineOptions | null | undefined, group: TimelineGroup | string | null | undefined, rowStyle: TimelineRowStyle | null | undefined): number | string {\n    return TimelineStyleUtils.getFirstSet(\n      // default value\n      defaultGroupStyle.height || 'auto',\n      // exact group style\n      TimelineStyleUtils.getGroupStyle(group)?.height,\n      // Row row style\n      rowStyle?.groupsStyle?.height,\n      // global styles\n      options?.rowsStyle?.groupsStyle?.height,\n    );\n  }\n\n  static groupMarginTop(options: TimelineOptions | null | undefined, group: TimelineGroup | string | null | undefined, rowStyle: TimelineRowStyle | null | undefined): number | string {\n    return TimelineStyleUtils.getFirstSet(\n      // default value\n      defaultGroupStyle.marginTop || 'auto',\n      // exact style\n      TimelineStyleUtils.getGroupStyle(group)?.marginTop,\n      // Row row style\n      rowStyle?.groupsStyle?.marginTop,\n      // global styles\n      options?.rowsStyle?.groupsStyle?.marginTop,\n    );\n  }\n\n  static groupFillColor(options: TimelineOptions | null | undefined, group: TimelineGroup | string | null | undefined, rowStyle: TimelineRowStyle | null | undefined): string {\n    return TimelineStyleUtils.getFirstSet(\n      // default value\n      defaultGroupStyle.fillColor || '',\n      // exact style\n      TimelineStyleUtils.getGroupStyle(group)?.fillColor,\n      // Row row style\n      rowStyle?.groupsStyle?.fillColor,\n      // global styles\n      options?.rowsStyle?.groupsStyle?.fillColor,\n    );\n  }\n\n  /**\n   * Get current row height from styles\n   */\n  static getRowHeight(rowStyle: TimelineRowStyle | null, options: TimelineOptions | null): number {\n    const defaultValue = defaultTimelineRowStyle.height || 0;\n    return TimelineStyleUtils.getFirstSet(\n      // default value\n      defaultValue,\n      // exact style\n      rowStyle?.height,\n      // Style set by global options\n      options?.rowsStyle?.height,\n    );\n  }\n  static getRowMarginBottom(rowStyle: TimelineRowStyle | null, options: TimelineOptions | null): number {\n    const defaultValue = defaultTimelineRowStyle.marginBottom || 0;\n    return TimelineStyleUtils.getFirstSet(\n      // default value\n      defaultValue,\n      // exact style\n      rowStyle?.marginBottom,\n      // Style set by global options\n      options?.rowsStyle?.marginBottom,\n    );\n  }\n\n  static getRowFillColor(rowStyle: TimelineRowStyle | null, options: TimelineOptions | null): string {\n    const defaultValue = defaultTimelineRowStyle.fillColor || '';\n    return TimelineStyleUtils.getFirstSet(\n      // default value\n      defaultValue,\n      // exact style\n      rowStyle?.fillColor,\n      // Style set by global options\n      options?.rowsStyle?.fillColor,\n    );\n  }\n\n  static headerHeight(options: TimelineOptions | null, defaultRowHeight = 30): number {\n    return options?.headerHeight || defaultRowHeight;\n  }\n  static keyframeDraggable(keyframe: TimelineKeyframe | null, group: TimelineGroup | string | null, row: TimelineRow | null, options: TimelineOptions | null, defaultValue = true): boolean {\n    const findFirstNegativeBool = true;\n    const boolResult = TimelineStyleUtils.getValue<boolean>(\n      defaultValue,\n      findFirstNegativeBool,\n      // Keyframe settings\n      keyframe?.draggable,\n      // Group settings\n      TimelineStyleUtils.getGroup(group)?.keyframesDraggable,\n      // Row settings\n      row?.keyframesDraggable,\n      // Start from global settings first.\n      options?.keyframesDraggable,\n    );\n    return boolResult;\n  }\n\n  static groupDraggable(group: TimelineGroup | string | null | undefined, row: TimelineRow | null, options: TimelineOptions): boolean {\n    const findFirstNegativeBool = true;\n    const boolResult = TimelineStyleUtils.getValue<boolean>(\n      true,\n      findFirstNegativeBool,\n      // Group settings\n      TimelineStyleUtils.getGroup(group)?.draggable,\n      // Row settings\n      row?.groupsDraggable,\n      // Start from global settings first.\n      options?.groupsDraggable,\n    );\n    return boolResult;\n  }\n}\n","/**\n * Internal element type.\n */\nexport enum TimelineElementType {\n  /**\n   * Timeline\n   */\n  Timeline = 'timeline',\n  /**\n   * Keyframes\n   */\n  Keyframe = 'keyframe',\n  /**\n   * Keyframes connected and presenting one group.\n   */\n  Group = 'group',\n  /**\n   * Timeline row.\n   */\n  Row = 'row',\n  None = 'none',\n}\n","import { TimelineElementType } from '../enums/timelineElementType';\nimport { TimelineElementDragState } from './timelineElementDragState';\n\n/**\n * Information about current drag state.\n */\nexport class TimelineDraggableData {\n  /**\n   * Whether position was changed.\n   */\n  changed = false;\n  /**\n   * Drag initial click target.\n   */\n  target!: TimelineElementDragState;\n  /**\n   * Elements to be dragged.\n   * Can be multiple elements, but drag will be started with target.\n   */\n  elements!: TimelineElementDragState[];\n  /**\n   * Dragging type.\n   */\n  type: TimelineElementType = TimelineElementType.None;\n  /**\n   * Prev value.\n   */\n  val!: number;\n  /**\n   * Prev value.\n   */\n  prevVal!: number;\n}\n","/**\n * Timeline base preventable event.\n */\nexport class TimelineBaseEvent {\n  private _prevented = false;\n  /**\n   * Prevent default click logic.\n   */\n  preventDefault(): void {\n    this._prevented = true;\n  }\n\n  isPrevented(): boolean {\n    return this._prevented;\n  }\n}\n","import { TimelineBaseEvent } from './timelineBaseEvent';\nimport { TimelineElement } from '../timelineElement';\nimport { TimelineEventSource } from '../../enums/timelineEventSource';\n\nexport class TimelineKeyframeChangedEvent extends TimelineBaseEvent {\n  /**\n   * Value to be used.\n   */\n  val!: number;\n  /**\n   * Previous value.\n   */\n  prevVal!: number;\n  /**\n   * Target element\n   */\n  target!: TimelineElement;\n  /**\n   * Event source.\n   */\n  source!: TimelineEventSource;\n}\n","export enum TimelineEventSource {\n  /**\n   * Changed by user interaction events.\n   */\n  User = 'user',\n  /**\n   * Changed programmatically.\n   */\n  Programmatically = 'programmatically',\n  SetTimeMethod = 'setTimeMethod',\n}\n","import { TimelineBaseEvent } from './timelineBaseEvent';\nimport { TimelineEventSource } from '../../enums/timelineEventSource';\n\nexport class TimelineTimeChangedEvent extends TimelineBaseEvent {\n  /**\n   * New value to be set if not prevented.\n   */\n  val = 0;\n  /**\n   * previous value, that actually set at the moment.\n   */\n  prevVal = 0;\n  /**\n   * Source of the change.\n   */\n  source: TimelineEventSource = TimelineEventSource.User;\n}\n","/**\n * Timeline selection event type.\n */\nexport enum TimelineSelectionEventSource {\n  /**\n   * Keyframe selection is performed.\n   */\n  Keyframes = 'keyframes',\n}\n","import { TimelineSelectionEventSource } from '../../enums/timelineSelectionEventSource';\nimport { TimelineKeyframe } from '../../models/timelineKeyframe';\n\nexport class TimelineSelectedEvent {\n  /**\n   * Selected Keyframes list.\n   */\n  selected: TimelineKeyframe[] = [];\n  /**\n   * Changed selection.\n   */\n  changed: TimelineKeyframe[] = [];\n  /**\n   * Selection mode.\n   */\n  mode: TimelineSelectionEventSource = TimelineSelectionEventSource.Keyframes;\n}\n","import { TimelineElement } from '../timelineElement';\nimport { TimelinePoint } from '../timelinePoint';\nimport { TimelineBaseEvent } from './timelineBaseEvent';\n\nexport class TimelineClickEvent extends TimelineBaseEvent {\n  args: MouseEvent | TouchEvent | null = null;\n  /**\n   * Clicked screen position.\n   */\n  get pos(): DOMPoint | null {\n    return this.point?.pos || null;\n  }\n  get val(): number {\n    if (this.point) {\n      return this.point.val;\n    }\n    return NaN;\n  }\n  /**\n   * All elements located under current mouse activity.\n   */\n  elements: TimelineElement[] = [];\n  /**\n   * Element that selected as target under the click.\n   */\n  target: TimelineElement | null = null;\n  /**\n   * Timeline current active drag position.\n   */\n  point: TimelinePoint | null = null;\n}\n","import { TimelinePoint } from '../timelinePoint';\nimport { TimelineBaseEvent } from './timelineBaseEvent';\nimport { TimelineElementDragState } from '../timelineElementDragState';\n\nexport class TimelineDragEvent extends TimelineBaseEvent {\n  args: MouseEvent | TouchEvent | null = null;\n  get pos(): DOMPoint | null {\n    return this.point?.pos || null;\n  }\n  /**\n   * Elements to be dragged as a group.\n   */\n  elements: TimelineElementDragState[] | null = null;\n  /**\n   * Target element\n   */\n  target: TimelineElementDragState | null = null;\n  /**\n   * Timeline current active drag position.\n   */\n  point: TimelinePoint | null = null;\n  /**\n   * Timeline previous drag position.\n   */\n  prevPoint: TimelinePoint | null = null;\n}\n","export enum TimelineInteractionMode {\n  /**\n   * Keyframe selection tool selecting single or group of keyframes.\n   */\n  Selection = 'selection',\n  /**\n   * Pan tool with the possibility to select keyframes.\n   */\n  Pan = 'pan',\n  /**\n   * Allow only pan without any keyframes interaction.\n   * Timeline still can be moved and controlled by option 'timelineDraggable'.\n   */\n  NonInteractivePan = 'nonInteractivePan',\n  /**\n   * Zoom tool.\n   */\n  Zoom = 'zoom',\n\n  /**\n   * No iteraction, except moving a timeline.\n   * Timeline still can be moved and controlled by option 'timelineDraggable'.\n   */\n  None = 'none',\n}\n","export enum TimelineCursorType {\n  Alias = 'alias',\n  AllScroll = 'all-scroll',\n  Auto = 'auto',\n  Cell = 'cell',\n  ContextMenu = 'context-menu',\n  ColResize = 'col-resize',\n  Copy = 'copy',\n  Crosshair = 'crosshair',\n  Default = 'default',\n  EResize = 'e-resize',\n  EWResize = 'ew-resize',\n  Grab = 'grab',\n  Grabbing = 'grabbing',\n  Help = 'help',\n  Move = 'move',\n  NResize = 'n-resize',\n  NEResize = 'ne-resize',\n  NESWResize = 'nesw-resize',\n  NSResize = 'ns-resize',\n  NWResize = 'nw-resize',\n  NWSEResize = 'nwse-resize',\n  NoDrop = 'no-drop',\n  None = 'none',\n  NotAllowed = 'not-allowed',\n  Pointer = 'pointer',\n  Progress = 'progress',\n  RowResize = 'row-resize',\n  SResize = 's-resize',\n  SEResize = 'se-resize',\n  SWResize = 'sw-resize',\n  Text = 'text',\n  WResize = 'w-resize',\n  Wait = 'wait',\n  ZoomIn = 'zoom-in',\n  ZoomOut = 'zoom-out',\n}\n","export enum TimelineCapShape {\n  None = 'none',\n  Triangle = 'triangle',\n  Rect = 'rect',\n}\n","/**\n * Timeline selection mode.\n */\nexport enum TimelineSelectionMode {\n  /**\n   * Select new items. deselect changed.\n   */\n  Normal = 'normal',\n  /**\n   * Append current selection.\n   */\n  Append = 'append',\n  /**\n   * Revert selection of a specified nodes.\n   */\n  Revert = 'revert',\n}\n","/**\n * Event names of the component.\n */\nexport enum TimelineEvents {\n  Selected = 'selected',\n  TimeChanged = 'timechanged',\n  KeyframeChanged = 'keyframeChanged',\n  DragStarted = 'dragStarted',\n  Drag = 'drag',\n  DragFinished = 'dragFinished',\n  Scroll = 'scroll',\n  ScrollFinished = 'scrollFinished',\n  DoubleClick = 'doubleClick',\n  MouseDown = 'mouseDown',\n}\n","export enum TimelineScrollSource {\n  DefaultMode = 'none',\n  ZoomMode = 'zoom',\n  ScrollBySelection = 'scrollBySelection',\n}\n","import { TimelineConsts } from '../timelineConsts';\n\nexport const defaultTimelineConsts: TimelineConsts = {\n  /**\n   * Private. Auto pan speed.\n   */\n  autoPanSpeed: 50,\n  /**\n   * Private. scroll speed when mouse drag is used (from 0 to 1)\n   */\n  scrollByDragSpeed: 0.12,\n  /**\n   * Private. Determine whether item was clicked.\n   */\n  clickDetectionMs: 120,\n  /**\n   * Private. Timeout to detect double click.\n   */\n  doubleClickTimeoutMs: 400,\n  /**\n   * Private. Time in ms used to refresh scrollbars when pan is finished.\n   */\n  scrollFinishedTimeoutMs: 500,\n  /**\n   * Private. Auto pan padding\n   */\n  autoPanByScrollPadding: 10,\n  /**\n   * Private. Click threshold\n   */\n  clickThreshold: 3,\n  /**\n   * Private. Private.Click min radius for the elements detection.\n   */\n  clickDetectionMinRadius: 2,\n  /**\n   * Private. Skip some auto pan/scroll actions if they are executed more rapid than this value.\n   */\n  autoPanSpeedLimit: 10,\n  /**\n   * Private. Default auto size for the group. It's percents.\n   */\n  defaultGroupHeight: 0.7,\n} as TimelineConsts;\n","import { TimelineCapShape } from '../../enums/timelineCapShape';\nimport { TimelineCursorType } from '../../enums/timelineCursorType';\nimport { TimelineStyle } from '../styles/timelineStyle';\n\nexport const defaultTimelineStyle = {\n  width: 2,\n  marginTop: 15,\n  marginBottom: 0,\n  strokeColor: 'DarkOrange',\n  fillColor: 'DarkOrange',\n  capStyle: {\n    width: 4,\n    height: 10,\n    /**\n     * Draw timeline rectangular cap.\n     */\n    capType: TimelineCapShape.Rect,\n    strokeColor: 'DarkOrange',\n    fillColor: 'DarkOrange',\n  },\n  cursor: TimelineCursorType.EWResize,\n} as TimelineStyle;\n","import { TimelineOptions } from '../timelineOptions';\nimport { defaultGroupStyle } from './defaultGroupStyle';\nimport { defaultTimelineKeyframeStyle } from './defaultTimelineKeyframeStyle';\nimport { defaultTimelineRowStyle } from './defaultTimelineRowStyle';\nimport { defaultTimelineStyle } from './defaultTimelineStyle';\n\nexport const defaultTimelineOptions = {\n  /**\n   *  Snap all selected keyframes as a bundle during the drag.\n   */\n  snapAllKeyframesOnMove: false,\n\n  /**\n   * Check whether snapping is enabled.\n   */\n  snapEnabled: true,\n\n  /**\n   * Timeline style.\n   */\n  timelineStyle: defaultTimelineStyle,\n  /**\n   * approximate step for the timeline in pixels for 1 second\n   */\n  stepPx: 120,\n  /**\n   * Number of units that should fit into one stepPx. (1 second by a default)\n   */\n  stepVal: 1000,\n  stepSmallPx: 30,\n  /**\n   * Snap step in units. from 0 to stepVal\n   */\n  snapStep: 200,\n  /**\n   * additional left margin in pixels to start the line gauge from.\n   */\n  leftMargin: 25,\n  headerFillColor: '#101011',\n  fillColor: '#101011',\n\n  labelsColor: '#D5D5D5',\n  /**\n   * Header gauge tick color.\n   */\n  tickColor: '#D5D5D5',\n  /**\n   * Selection rectangle color.\n   */\n  selectionColor: 'White',\n\n  /**\n   * Default rows style.\n   * Can be overridden by setting style individually for each row.\n   */\n  rowsStyle: defaultTimelineRowStyle,\n\n  /**\n   * Style for the all keyframes in a current row.\n   * Individual keyframe can have own style.\n   */\n  keyframesStyle: defaultTimelineKeyframeStyle,\n  /**\n   * Style of the groups.\n   */\n  groupsStyle: defaultGroupStyle,\n  /**\n   * Header height in pixels\n   */\n  headerHeight: 30,\n  font: '11px sans-serif',\n  /**\n   * Default zoom level = 1. where screen pixels are equals to the corresponding stepVal stepPx.\n   */\n  zoom: 1,\n  /**\n   * Default zoom speed.\n   */\n  zoomSpeed: 0.1,\n  /**\n   * Max zoom value.\n   */\n  zoomMin: 0.1,\n  /**\n   * Min zoom value.\n   */\n  zoomMax: 8,\n  /**\n   * Set this to true in a MAC OS environment: The Meta key will be used instead of the Ctrl key.\n   */\n  controlKeyIsMetaKey: false,\n  /**\n   * Access the scroll container via this class for e.g. scroll bar styling.\n   */\n  scrollContainerClass: 'scroll-container',\n  /**\n   * keyframes group is draggable.\n   */\n  groupsDraggable: true,\n  /**\n   * keyframes are draggable.\n   */\n  keyframesDraggable: true,\n  /**\n   * Timeline can be dragged or position can be changed by user interaction. Default: true\n   */\n  timelineDraggable: true,\n  /**\n   * Start drawing timeline from this min point.\n   * Bounds for the keyframe dragging.\n   */\n  min: 0,\n  /**\n   * Max bounds timeline can navigate to.\n   */\n  max: Number.MAX_VALUE,\n} as TimelineOptions;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n// bundle entry point\n\nimport { TimelineEventsEmitter } from './timelineEventsEmitter';\nimport { TimelineConsts } from './settings/timelineConsts';\n\n// @public timeline models\nimport { TimelineRanged } from './models/timelineRanged';\nimport { TimelineModel } from './models/timelineModel';\nimport { TimelineRow } from './models/timelineRow';\nimport { TimelineKeyframe } from './models/timelineKeyframe';\n// @public styles\nimport { TimelineOptions } from './settings/timelineOptions';\n\nimport { TimelineStyleUtils } from './utils/timelineStyleUtils';\nimport { TimelineUtils } from './utils/timelineUtils';\nimport { TimelineElement } from './utils/timelineElement';\n\n// @private helper containers.\nimport { TimelineCutBoundsRectResults } from './utils/timelineCutBoundsRectResults';\nimport { TimelineSelectionResults } from './utils/timelineSelectionResults';\nimport { TimelineMouseData } from './utils/timelineMouseData';\nimport { TimelineElementDragState } from './utils/timelineElementDragState';\nimport { TimelineDraggableData } from './utils/timelineDraggableData';\n\n// @private virtual model\nimport { TimelineGroupViewModel } from './viewModels/timelineGroupViewModel';\nimport { TimelineKeyframeViewModel } from './viewModels/timelineKeyframeViewModel';\nimport { TimelineRowViewModel } from './viewModels/timelineRowViewModel';\nimport { TimelineViewModel } from './viewModels/timelineViewModel';\n\n// @public events\nimport { TimelineKeyframeChangedEvent } from './utils/events/timelineKeyframeChangedEvent';\nimport { TimelineTimeChangedEvent } from './utils/events/timelineTimeChangedEvent';\nimport { TimelineSelectedEvent } from './utils/events/timelineSelectedEvent';\nimport { TimelineScrollEvent } from './utils/events/timelineScrollEvent';\nimport { TimelineClickEvent } from './utils/events/timelineClickEvent';\nimport { TimelineDragEvent } from './utils/events/timelineDragEvent';\n\n// @public enums\nimport { TimelineKeyframeShape } from './enums/timelineKeyframeShape';\nimport { TimelineInteractionMode } from './enums/timelineInteractionMode';\nimport { TimelineElementType } from './enums/timelineElementType';\nimport { TimelineCursorType } from './enums/timelineCursorType';\nimport { TimelineCapShape } from './enums/timelineCapShape';\nimport { TimelineEventSource } from './enums/timelineEventSource';\nimport { TimelineSelectionMode } from './enums/timelineSelectionMode';\nimport { TimelineEvents } from './enums/timelineEvents';\n// @private defaults are exposed:\n\nimport { TimelineScrollSource } from './enums/timelineScrollSource';\nimport { defaultTimelineConsts } from './settings/defaults/defaultTimelineConsts';\nimport { defaultTimelineOptions } from './settings/defaults/defaultTimelineOptions';\n\nexport class Timeline extends TimelineEventsEmitter {\n  /**\n   * component container.\n   */\n  _container: HTMLElement | null = null;\n  /**\n   * Dynamically generated canvas inside of the container.\n   */\n  _canvas: HTMLCanvasElement | null = null;\n  /**\n   * Dynamically generated scroll container.\n   */\n  _scrollContainer: HTMLElement | null = null;\n  /**\n   * Dynamically generated virtual scroll content.\n   * While canvas has no real size, this element is used to create virtual scroll on the parent element.\n   */\n  _scrollContent: HTMLElement | null = null;\n  /**\n   * Rendering context\n   */\n  _ctx: CanvasRenderingContext2D | null = null;\n  /**\n   * Components settings\n   */\n  _options!: TimelineOptions;\n  /**\n   * Drag start position.\n   */\n  _startPosMouseArgs: TimelineMouseData | null = null;\n  /**\n   * Drag scroll started position.\n   */\n  _scrollStartPos: DOMPoint | null = null;\n  /**\n   * Private. Current mouse position that is used to track values between mouse up/down events.\n   * Can be null, use public methods and properties instead.\n   */\n  _currentPos: TimelineMouseData | null = null;\n\n  /**\n   * Private. Current active mouse area selection rectangle displayed during the mouse up/down drag events.\n   */\n  _selectionRect: DOMRect | null = null;\n  /**\n   * Private. Whether selection rectangle is displayed.\n   */\n  _selectionRectEnabled = false;\n  /**\n   * Private. Information in regard of current active drag state.\n   */\n  _drag: TimelineDraggableData | null = null;\n  _startedDragWithCtrl = false;\n  _startedDragWithShiftKey = false;\n  _scrollProgrammatically = false;\n  _clickTimeout: number | null = null;\n  _lastClickTime = 0;\n  _lastClickPoint: DOMPoint | null = null;\n  _consts: TimelineConsts = defaultTimelineConsts;\n  /**\n   * Private. whether click is allowed.\n   */\n  _clickAllowed = false;\n  /**\n   * Private. scroll finished timer reference.\n   */\n  _scrollFinishedTimerRef?: number | null = null;\n  /**\n   * Private.Current timeline position.\n   * Please use public get\\set methods to properly change the timeline position.\n   */\n  _val = 0;\n  _pixelRatio = 1;\n  /**\n   * Private. Current zoom level. Please use publicly available properties to set zoom levels.\n   */\n  _currentZoom = 0;\n  /**\n   * Private. Ref for the auto pan scroll interval.\n   */\n  _intervalRef?: number | null = null;\n  /**\n   * Private.\n   * When last auto pan scroll action was started.\n   */\n  _autoPanLastActionDate = 0;\n  /**\n   * Private.\n   * Is pan mouse interactions are started.\n   */\n  _isPanStarted = false;\n  /**\n   * Private.\n   * Component interaction mode. Please use publicly available methods.\n   */\n  _interactionMode = TimelineInteractionMode.Selection;\n\n  _lastUsedArgs: MouseEvent | TouchEvent | null = null;\n  /**\n   * Private.\n   * Current set timeline model.\n   */\n  _model: TimelineModel | null = null;\n  /**\n   * Private.\n   * Indication when scroll are drag or click is started.\n   */\n  _scrollAreaClickOrDragStarted = false;\n  /**\n   * Create Timeline instance\n   * @param options Timeline settings.\n   * @param model Timeline model.\n   */\n  constructor(options: TimelineOptions | null = null, model: TimelineModel | null = null) {\n    super();\n    this._options = TimelineUtils.cloneOptions(defaultTimelineOptions);\n    // Allow to create instance without an error to perform tests.\n    if (options || model) {\n      this.initialize(options, model);\n    }\n  }\n\n  /**\n   * Initialize Timeline\n   * @param options Timeline settings.\n   * @param model Timeline model.\n   */\n  public initialize = (options: TimelineOptions | null, model: TimelineModel | null): void => {\n    this._model = model;\n    if (!options || !options.id) {\n      throw new Error(`Element cannot be empty. Should be string or DOM element.`);\n    }\n\n    this._generateContainers(options.id);\n    this._options = TimelineUtils.cloneOptions(defaultTimelineOptions);\n    if (options) {\n      this._options = this._setOptions(options);\n    }\n    this._subscribeComponentEvents();\n    this.rescale();\n    this.redraw();\n  };\n\n  /**\n   * Generate component html.\n   * @param id container.\n   */\n  _generateContainers = (id: string | HTMLElement): void => {\n    if (id instanceof HTMLElement) {\n      this._container = id as HTMLElement;\n    } else {\n      this._container = document.getElementById(id);\n    }\n\n    if (!this._container) {\n      throw new Error(`Element cannot be empty. Should be string or DOM element.`);\n    }\n\n    this._scrollContainer = document.createElement('div');\n    this._scrollContent = document.createElement('div');\n    this._canvas = document.createElement('canvas');\n\n    if (!this._canvas || !this._canvas.getContext) {\n      console.log('Cannot initialize canvas context.');\n      return;\n    }\n\n    this._container.style.position = 'relative';\n    // Generate size container:\n    this._canvas.style.cssText =\n      'image-rendering: -moz-crisp-edges;' +\n      'image-rendering: -webkit-crisp-edges;' +\n      'image-rendering: pixelated;' +\n      'image-rendering: crisp-edges;' +\n      'user-select: none;' +\n      '-webkit-user-select: none;' +\n      '-khtml-user-select: none;' +\n      '-moz-user-select: none;' +\n      '-o-user-select: none;' +\n      'user-select: none;' +\n      'touch-action: none;' +\n      'position: relative;' +\n      '-webkit-user-drag: none;' +\n      '-khtml-user-drag: none;' +\n      '-moz-user-drag: none;' +\n      '-o-user-drag: none;' +\n      'user-drag: none;' +\n      'padding: inherit';\n\n    // Those styles are hardcoded and required for the proper scrolling.\n    this._scrollContainer.style.cssText = 'overflow: scroll;' + 'position: absolute;' + 'width:  100%;' + 'height:  100%;';\n    this._scrollContent.style.width = this._scrollContent.style.height = '100%';\n\n    // add the text node to the created div\n    this._scrollContainer.appendChild(this._scrollContent);\n    this._container.appendChild(this._scrollContainer);\n    const scrollBarWidth = this._scrollContainer.offsetWidth - this._scrollContent.clientWidth;\n    // Calculate current browser scrollbar size and add offset for the canvas\n    this._canvas.style.width = this._canvas.style.height = 'calc(100% -' + (scrollBarWidth || 17) + 'px)';\n\n    this._container.appendChild(this._canvas);\n    this._ctx = this._getCtx();\n  };\n  /**\n   * Get drawing context\n   */\n  _getCtx(): CanvasRenderingContext2D | null {\n    if (!this._canvas) {\n      return null;\n    }\n    if (this._ctx) {\n      return this._ctx;\n    }\n    this._ctx = this._canvas.getContext('2d');\n    return this._ctx;\n  }\n  /**\n   * Subscribe current component on the related events.\n   * Private. Use initialize method instead.\n   */\n  _subscribeComponentEvents = (): void => {\n    // Allow to call event multiple times, revoke current subscription and subscribe again.\n    this._unsubscribeComponentEvents();\n    if (!this._container || !this._scrollContainer || !this._canvas) {\n      throw Error(`Cannot subscribe on scroll events while one of the containers is null or empty. Please call initialize method first`);\n    }\n    if (this._container) {\n      this._container.addEventListener('wheel', this._handleWheelEvent);\n    }\n    if (this._scrollContainer) {\n      this._scrollContainer.addEventListener('scroll', this._handleScrollEvent);\n      this._scrollContainer.addEventListener('touchstart', this._handleScrollMouseDownEvent);\n      this._scrollContainer.addEventListener('mousedown', this._handleScrollMouseDownEvent);\n    }\n    document.addEventListener('keyup', this._handleKeyUp, false);\n    document.addEventListener('keydown', this._handleKeyDown, false);\n    window.addEventListener('blur', this._handleBlurEvent, false);\n    window.addEventListener('resize', this._handleWindowResizeEvent, false);\n    if (this._canvas) {\n      this._canvas.addEventListener('touchstart', this._handleMouseDownEvent, false);\n      this._canvas.addEventListener('mousedown', this._handleMouseDownEvent, false);\n    }\n    window.addEventListener('mousemove', this._handleMouseMoveEvent, false);\n    window.addEventListener('touchmove', this._handleMouseMoveEvent, false);\n    window.addEventListener('mouseup', this._handleMouseUpEvent, false);\n    window.addEventListener('touchend', this._handleMouseUpEvent, false);\n  };\n\n  /**\n   * Private. Use dispose method instead.\n   */\n  _unsubscribeComponentEvents = (): void => {\n    this._container?.removeEventListener('wheel', this._handleWheelEvent);\n\n    if (this._scrollContainer) {\n      this._scrollContainer.removeEventListener('scroll', this._handleScrollEvent);\n      this._scrollContainer.removeEventListener('touchstart', this._handleScrollMouseDownEvent);\n      this._scrollContainer.removeEventListener('mousedown', this._handleScrollMouseDownEvent);\n    } else {\n      console.warn(`Cannot unsubscribe scroll while it's already empty`);\n    }\n    window.removeEventListener('blur', this._handleBlurEvent);\n    window.removeEventListener('resize', this._handleWindowResizeEvent);\n    document.removeEventListener('keydown', this._handleKeyDown);\n    document.removeEventListener('keyup', this._handleKeyUp);\n    if (this._canvas) {\n      this._canvas.removeEventListener('touchstart', this._handleMouseDownEvent);\n      this._canvas.removeEventListener('mousedown', this._handleMouseDownEvent);\n    } else {\n      console.warn(`Cannot unsubscribe canvas while it's already empty`);\n    }\n    window.removeEventListener('mousemove', this._handleMouseMoveEvent);\n    window.removeEventListener('touchmove', this._handleMouseMoveEvent);\n    window.removeEventListener('mouseup', this._handleMouseUpEvent);\n    window.removeEventListener('touchend', this._handleMouseUpEvent);\n  };\n  /**\n   * Dispose current component: unsubscribe component and user events.\n   */\n  public dispose = (): void => {\n    // Unsubscribe all user events.\n    this.offAll();\n    // Stop times\n    this._stopAutoPan();\n    this._clearScrollFinishedTimer();\n    this._unsubscribeComponentEvents();\n    this._container = null;\n    this._canvas = null;\n    this._scrollContainer = null;\n    this._scrollContent = null;\n    this._ctx = null;\n    this._cleanUpSelection();\n  };\n  /**\n   * On key up is received.\n   */\n  _handleKeyUp = (event: KeyboardEvent): void => {\n    if (this._interactionMode === TimelineInteractionMode.Zoom) {\n      this._setZoomCursor(event);\n    }\n  };\n  /**\n   * On key down is received.\n   */\n  _handleKeyDown = (event: KeyboardEvent): void => {\n    if (this._interactionMode === TimelineInteractionMode.Zoom) {\n      this._setZoomCursor(event);\n    }\n  };\n  _setZoomCursor = (e: MouseEvent | KeyboardEvent): void => {\n    if (this._controlKeyPressed(e)) {\n      this._setCursor(TimelineCursorType.ZoomOut);\n    } else {\n      this._setCursor(TimelineCursorType.ZoomIn);\n    }\n  };\n  _handleBlurEvent = (): void => {\n    this._cleanUpSelection(true);\n  };\n  _handleWindowResizeEvent = (): void => {\n    // Rescale and redraw\n    this.rescale();\n    this.redraw();\n  };\n\n  _clearScrollFinishedTimer = (): void => {\n    if (this._scrollFinishedTimerRef) {\n      clearTimeout(this._scrollFinishedTimerRef);\n      this._scrollFinishedTimerRef = null;\n    }\n  };\n  _handleScrollMouseDownEvent = (): void => {\n    this._scrollAreaClickOrDragStarted = true;\n  };\n  _handleScrollEvent = (args: Event): void => {\n    const scrollProgrammatically = this._scrollProgrammatically;\n    if (this._scrollProgrammatically) {\n      this._scrollProgrammatically = false;\n    }\n    // Stop previous running timeout.\n    this._clearScrollFinishedTimer();\n    // Set a timeout to run event 'scrolling end'.\n    // Auto scroll is used to repeat scroll when drag element or select items outside of the visible area.\n    this._scrollFinishedTimerRef = window.setTimeout(() => {\n      if (!this._isPanStarted) {\n        this._clearScrollFinishedTimer();\n\n        this.rescale();\n        this.redraw();\n      }\n      this._emitScrollEvent(args, scrollProgrammatically, TimelineEvents.ScrollFinished);\n    }, this._consts.scrollFinishedTimeoutMs);\n\n    this.redraw();\n    this._emitScrollEvent(args, scrollProgrammatically);\n  };\n  _controlKeyPressed = (e: MouseEvent | KeyboardEvent | TouchEvent): boolean => {\n    if (!this._options || this._options.controlKeyIsMetaKey === undefined) {\n      return e.metaKey || e.ctrlKey;\n    }\n    return this._options.controlKeyIsMetaKey || this._options.controlKeyIsMetaKey ? e.metaKey : e.ctrlKey;\n  };\n  _handleWheelEvent = (event: WheelEvent): void => {\n    if (!this._scrollContainer || !this._canvas) {\n      // Component is not initialized yet.\n      return;\n    }\n    if (this._controlKeyPressed(event)) {\n      event.preventDefault();\n      const mousePosArguments = this._getMousePos(this._canvas, event);\n      const mousePos = Math.max(0, mousePosArguments.pos.x || 0);\n      this._zoom(TimelineUtils.sign(event.deltaY), this._options.zoomSpeed || 0, mousePos);\n    } else {\n      this.scrollTop = this._scrollContainer.scrollTop + event.deltaY;\n      event.preventDefault();\n    }\n  };\n  _zoom = (direction: number, speed: number, x: number): void => {\n    if (speed && speed > 0 && speed <= 1) {\n      const deltaSpeed = TimelineUtils.getDistance(this._canvasClientWidth() / 2, x) * 0.2;\n      x = x + deltaSpeed;\n      const diff = this._canvasClientWidth() / x;\n      const val = this._fromScreen(x);\n      const zoom = direction * this._currentZoom * speed;\n      //this._options.zoom\n      this._currentZoom = this._setZoom(this._currentZoom + zoom);\n      // Get only after zoom is set\n      const zoomCenter = this.valToPx(val);\n      let newScrollLeft = Math.round(zoomCenter - this._canvasClientWidth() / diff);\n      if (newScrollLeft <= 0) {\n        newScrollLeft = 0;\n      }\n\n      this._rescaleInternal(newScrollLeft + this._canvasClientWidth(), null, TimelineScrollSource.ZoomMode);\n      this.scrollLeft = newScrollLeft;\n\n      this.redraw();\n    }\n  };\n  /**\n   * Zoom in\n   * @param speed value from 0 to 1\n   */\n  public zoomIn = (speed = this._options.zoomSpeed): void => {\n    const width = this._scrollContainer?.clientWidth || 0;\n    if (speed && width) {\n      this._zoom(1, speed, width / 2);\n    }\n  };\n  /**\n   * Zoom out.\n   * @param speed value from 0 to 1\n   */\n  public zoomOut = (speed = this._options.zoomSpeed): void => {\n    const width = this._scrollContainer?.clientWidth || 0;\n    if (speed && width) {\n      this._zoom(-1, speed, width / 2);\n    }\n  };\n  /**\n   * Set direct zoom value.\n   * @param zoom zoom value to set. percent 0-1 and etc.\n   * @param min min zoom.\n   * @param max max zoom.\n   * @return normalized value.\n   */\n  _setZoom = (zoom: number, min: number | null | undefined = null, max: number | null | undefined = null): number => {\n    min = TimelineUtils.isNumber(min) ? min : this._options?.zoomMin;\n    max = TimelineUtils.isNumber(max) ? max : this._options?.zoomMax;\n    if (TimelineUtils.isNumber(zoom)) {\n      zoom = TimelineUtils.keepInBounds(zoom, min, max);\n      zoom = zoom || 1;\n      this._currentZoom = zoom;\n      return zoom;\n    }\n\n    return zoom;\n  };\n\n  /**\n   * Set direct zoom value.\n   * @public\n   * @param zoom zoom value to set. percent 0-1 and etc.\n   * @return normalized value.\n   */\n  setZoom = (zoom: number): number => {\n    const prevZoom = this.getZoom();\n    if (prevZoom !== zoom) {\n      const zoomSet = this._setZoom(zoom);\n      if (prevZoom != zoomSet) {\n        this.rescale();\n        this.redraw();\n        return zoomSet;\n      }\n    }\n    return prevZoom;\n  };\n  /**\n   * Get current zoom level.\n   */\n  getZoom = (): number => {\n    if (TimelineUtils.isNumber(this._currentZoom)) {\n      return this._currentZoom || 1;\n    }\n    return 1;\n  };\n  _getClickDetectionRadius = (point: TimelineMouseData): number => {\n    const defaultValue = this._consts.clickDetectionMinRadius || 1;\n    return Math.max(defaultValue, point?.radius || defaultValue);\n  };\n  /**\n   * @param args\n   */\n  _handleMouseDownEvent = (args: MouseEvent | TouchEvent): void => {\n    // Prevent drag of the canvas if canvas is selected as text:\n    TimelineUtils.clearBrowserSelection();\n    if (!this._canvas || !this._scrollContainer) {\n      this._cleanUpSelection();\n      return;\n    }\n    this._startPosMouseArgs = this._trackMousePos(this._canvas, args);\n\n    if (!this._startPosMouseArgs) {\n      return;\n    }\n    let isDoubleClick = Date.now() - this._lastClickTime < this._consts.doubleClickTimeoutMs;\n    // Don't allow to perform double click if mouse was moved to far.\n    if (\n      this._lastClickPoint &&\n      this._startPosMouseArgs &&\n      TimelineUtils.getDistance(this._lastClickPoint.x, this._lastClickPoint.y, this._startPosMouseArgs.pos.x, this._startPosMouseArgs.pos.y) > this._consts.clickThreshold\n    ) {\n      isDoubleClick = false;\n    }\n\n    this._lastClickPoint = this._startPosMouseArgs.pos;\n    this._scrollStartPos = { x: this._scrollContainer.scrollLeft, y: this._scrollContainer.scrollTop } as DOMPoint;\n    this._clickAllowed = true;\n    let onlyElements: TimelineElementType[] | null = null;\n    if (this._interactionMode === TimelineInteractionMode.NonInteractivePan || this._interactionMode === TimelineInteractionMode.None) {\n      // Allow to select only timeline. Timeline position can be disabled/enabled by properties.\n      onlyElements = [TimelineElementType.Timeline];\n    }\n    const clickRadius = this._getClickDetectionRadius(this._startPosMouseArgs);\n    const elements = this.elementFromPoint(this._startPosMouseArgs.pos, clickRadius, onlyElements);\n\n    const target = this._findDraggableElement(elements, this._startPosMouseArgs.val);\n    // Create click event\n    const event = new TimelineClickEvent();\n    event.point = this._startPosMouseArgs;\n    event.args = args;\n    // all elements under the click:\n    event.elements = elements;\n    // target element.\n    event.target = target;\n\n    if (isDoubleClick) {\n      super.emit(TimelineEvents.DoubleClick, event);\n      return;\n    }\n\n    super.emit(TimelineEvents.MouseDown, event);\n\n    this._clickTimeout = Date.now();\n    this._lastClickTime = Date.now();\n    if (event.isPrevented()) {\n      // Mouse up will be also prevented\n      this._cleanUpSelection();\n      return;\n    }\n\n    this._currentPos = this._startPosMouseArgs;\n\n    // Select keyframes on mouse down\n    if (target && this._interactionMode !== TimelineInteractionMode.Zoom) {\n      this._drag = new TimelineDraggableData();\n      this._drag.val = target.val;\n      this._drag.type = target.type;\n      this._drag.target = this._setElementDragState(target, target.val);\n\n      if (target.type === TimelineElementType.Keyframe) {\n        this._startedDragWithCtrl = this._controlKeyPressed(args);\n        this._startedDragWithShiftKey = args.shiftKey;\n        // get all related selected keyframes if we are selecting one.\n        if (target?.keyframe && !target?.keyframe?.selected && !this._controlKeyPressed(args)) {\n          this._selectInternal(target.keyframe);\n        }\n        // Allow to drag all selected keyframes on a screen\n        this._drag.elements = this.getSelectedElements().map((element) => {\n          return this._setElementDragState(element, element.val);\n        });\n      } else if (target.type === TimelineElementType.Group) {\n        const keyframes = this._drag.target.keyframes;\n\n        if (keyframes && Array.isArray(keyframes)) {\n          this._drag.elements = keyframes.map((keyframe) => {\n            return this._setElementDragState(this._convertToTimelineElement(this._drag?.target.row || null, keyframe), keyframe.val);\n          });\n        }\n      } else {\n        this._drag.elements = [this._drag.target];\n      }\n    }\n\n    this.redraw();\n  };\n  _setElementDragState = (element: TimelineElement | TimelineElementDragState, val: number): TimelineElementDragState => {\n    const state = element as TimelineElementDragState;\n    state.prevVal = state.val;\n    if (state.startedVal === undefined || state.startedVal === null) {\n      state.startedVal = val;\n    }\n    if (state.prevVal === undefined || state.prevVal === null) {\n      state.prevVal = val;\n    }\n    state.val = val;\n    return state;\n  };\n  /**\n   * Check is mouse left button is clicked.\n   */\n  isLeftButtonClicked = (args: MouseEvent | TouchEvent | any): boolean => {\n    return !!args && args.buttons == 1;\n  };\n\n  /**\n   * Browser mouse move handler.\n   */\n  _handleMouseMoveEvent = (args: MouseEvent | TouchEvent | null): void => {\n    if (!args) {\n      args = this._lastUsedArgs;\n    } else {\n      this._lastUsedArgs = args;\n    }\n    if (!args || !this._canvas) {\n      return;\n    }\n    const touchEventArgs = args as TouchEvent;\n    const isTouch = touchEventArgs.changedTouches && touchEventArgs.changedTouches.length > 0;\n    this._currentPos = this._trackMousePos(this._canvas, args);\n    if (!this._isPanStarted && this._selectionRect && this._clickTimeoutIsOver()) {\n      // TODO: implement selection by rect\n      if (this._interactionMode === TimelineInteractionMode.None || this._interactionMode === TimelineInteractionMode.Zoom || this._interactionMode === TimelineInteractionMode.NonInteractivePan) {\n        this._selectionRectEnabled = false;\n      } else {\n        this._selectionRectEnabled = true;\n      }\n    } else {\n      this._selectionRectEnabled = false;\n    }\n\n    args = args as MouseEvent;\n    const isLeftClicked = this.isLeftButtonClicked(args);\n    if (!isLeftClicked) {\n      this._scrollAreaClickOrDragStarted = false;\n    }\n    // On dragging is started.\n    if (this._startPosMouseArgs) {\n      // On left button is on hold by the user\n      if (isLeftClicked || isTouch) {\n        if (this._drag && !this._startedDragWithCtrl) {\n          const convertedVal = this._currentPos.val;\n          if (this._drag.type === TimelineElementType.Timeline) {\n            this._setTimeInternal(convertedVal, TimelineEventSource.User);\n          } else if ((this._drag.type == TimelineElementType.Keyframe || this._drag.type == TimelineElementType.Group) && this._drag.elements) {\n            const offset = Math.floor(convertedVal - this._drag.val);\n            const movedOffset = this._moveElements(offset, this._drag.elements, TimelineEventSource.User);\n            if (movedOffset !== 0) {\n              if (!this._drag.changed) {\n                this._drag.prevVal = this._drag.val;\n                const eventArgs = this._emitDragStartedEvent(this._drag);\n                if (!eventArgs || eventArgs.isPrevented()) {\n                  // Cleanup drag here, so drag finished will be ignored.\n                  this._cleanUpSelection(true);\n                  this._drag = null;\n                  return;\n                }\n              }\n\n              this._drag.changed = true;\n              this._drag.val += offset;\n              this._emitDragEvent(this._drag);\n            }\n          }\n        }\n\n        if ((this._interactionMode === TimelineInteractionMode.Pan || this._interactionMode === TimelineInteractionMode.NonInteractivePan) && !this._drag) {\n          this._isPanStarted = true;\n          this._setCursor(TimelineCursorType.Grabbing);\n          // Track scroll by drag.\n          this._scrollByPan(this._startPosMouseArgs.pos, this._currentPos.pos, this._scrollStartPos);\n        } else {\n          if (this._interactionMode !== TimelineInteractionMode.None) {\n            // Track scroll by mouse or touch out of the area.\n            this._scrollBySelectionOutOfBounds(this._currentPos.pos);\n          }\n        }\n\n        this.redraw();\n      } else {\n        // Fallback. Cancel mouse move when focus was lost and mouse down is still counted.\n        this._cleanUpSelection(true);\n        this.redraw();\n      }\n    } else if (!isTouch) {\n      // Set mouse over cursors\n      let onlyElements: TimelineElementType[] | null = null;\n      if (this._interactionMode === TimelineInteractionMode.NonInteractivePan || this._interactionMode === TimelineInteractionMode.None) {\n        // Allow to select only timeline. Timeline position can be disabled/enabled by properties.\n        onlyElements = [TimelineElementType.Timeline];\n      }\n      const clickRadius = this._getClickDetectionRadius(this._currentPos);\n      const elements = this.elementFromPoint(this._currentPos.pos, clickRadius, onlyElements);\n      const target = this._findDraggableElement(elements, this._currentPos.val);\n      if (this._isPanStarted || this._interactionMode === TimelineInteractionMode.Pan || this._interactionMode === TimelineInteractionMode.NonInteractivePan) {\n        if (isLeftClicked) {\n          this._setCursor(TimelineCursorType.Grabbing);\n        } else {\n          this._setCursor(TimelineCursorType.Grab);\n        }\n      } else {\n        if (this._interactionMode === TimelineInteractionMode.Zoom) {\n          this._setZoomCursor(args);\n          return;\n        } else {\n          this._setCursor(TimelineCursorType.Default);\n        }\n      }\n\n      if (target) {\n        let cursor: TimelineCursorType | null = null;\n        if (target.type === TimelineElementType.Group) {\n          cursor = cursor || TimelineCursorType.EWResize;\n        } else if (target.type == TimelineElementType.Keyframe) {\n          cursor = cursor || TimelineCursorType.Pointer;\n        } else if (target.type == TimelineElementType.Timeline) {\n          cursor = cursor || this._options?.timelineStyle?.cursor || null;\n        }\n\n        if (cursor) {\n          this._setCursor(cursor);\n        }\n      }\n    }\n\n    if (isTouch) {\n      args.preventDefault();\n    }\n  };\n\n  /**\n   * Move elements\n   * @param offset vector to move elements along.\n   * @param elements Element to move.\n   * @returns real moved value.\n   */\n  _moveElements(offset: number, elements: TimelineElementDragState[], source: TimelineEventSource = TimelineEventSource.Programmatically): number {\n    if (!elements) {\n      return 0;\n    }\n    let isChanged = false;\n    if (Math.abs(offset) > 0) {\n      // Find drag min and max bounds:\n      let bounds = { min: Number.MIN_SAFE_INTEGER, max: Number.MAX_SAFE_INTEGER } as TimelineRanged;\n      // Set min max from the options.\n      bounds = TimelineUtils.setMinMax(bounds, this._options);\n      elements.forEach((p) => {\n        if (!p || !p.keyframe) {\n          return;\n        }\n        // find allowed bounds for the draggable items.\n        // find for each row and keyframe separately.\n        const currentBounds = TimelineUtils.setMinMax(TimelineUtils.setMinMax({ min: bounds.min, max: bounds.max }, p.keyframe), p.row || null);\n        const expectedKeyframeValue = this._options?.snapAllKeyframesOnMove ? this.snapVal(p.keyframe.val) : p.keyframe.val;\n        const newPosition = expectedKeyframeValue + offset;\n        // Check that move offset will hit min bounds\n        if ((currentBounds.min || currentBounds.min === 0) && TimelineUtils.isNumber(currentBounds.min) && newPosition < currentBounds.min) {\n          // Return to the bounds:\n          offset = offset + TimelineUtils.getDistance(currentBounds.min, newPosition);\n        }\n        if ((currentBounds.max || currentBounds.max === 0) && TimelineUtils.isNumber(currentBounds.max) && newPosition > currentBounds.max) {\n          // Return to the bounds:\n          offset = offset - TimelineUtils.getDistance(currentBounds.max, newPosition);\n        }\n      });\n\n      if (Math.abs(offset) > 0) {\n        // don't allow to move less than zero offset.\n        elements.forEach((element) => {\n          if (!element?.keyframe) {\n            return;\n          }\n          const prevVal = element.keyframe.val;\n          const toSet = prevVal + offset;\n          const newValue = this._setKeyframePos(element, toSet, source);\n          isChanged = newValue !== prevVal;\n        });\n      }\n\n      if (isChanged) {\n        return offset;\n      }\n    }\n\n    return 0;\n  }\n\n  /**\n   * Mouse up handler.\n   */\n  _handleMouseUpEvent = (args: MouseEvent | TouchEvent): void => {\n    this._scrollAreaClickOrDragStarted = false;\n    if (!this._canvas) {\n      return;\n    }\n    if (this._startPosMouseArgs) {\n      //window.releaseCapture();\n      const pos = this._trackMousePos(this._canvas, args);\n\n      // Click detection.\n      if (this._clickAllowed || !this._clickTimeoutIsOver() || (this._drag && (this._startedDragWithCtrl || this._startedDragWithShiftKey))) {\n        if (this._options && this._interactionMode === TimelineInteractionMode.Zoom) {\n          const direction = this._controlKeyPressed(args) ? 1 : -1;\n          const mouseArgs = this._getMousePos(this._canvas, args);\n          const mousePos = Math.max(0, mouseArgs.pos.x || 0);\n          this._zoom(direction, this._options.zoomSpeed || 0, mousePos);\n        } else {\n          this._performClick(pos, this._drag);\n        }\n      } else if (!this._drag && this._selectionRect && this._selectionRectEnabled) {\n        if (this._interactionMode === TimelineInteractionMode.Zoom) {\n          // TODO: implement zoom by screen rect.\n        } else if (this._interactionMode !== TimelineInteractionMode.None) {\n          const keyframes = this._getKeyframesByRectangle(this._selectionRect);\n          const selectionMode = args.shiftKey ? TimelineSelectionMode.Append : TimelineSelectionMode.Normal;\n          this.select(keyframes, selectionMode);\n        }\n      }\n\n      this._cleanUpSelection();\n      this.redraw();\n    }\n  };\n\n  /**\n   * Canvas client height.\n   */\n  _canvasClientHeight = (): number => {\n    if (this._canvas) {\n      return this._canvas.clientHeight;\n    }\n    return 0;\n  };\n\n  /**\n   * Canvas client width.\n   */\n  _canvasClientWidth = (): number => {\n    if (this._canvas) {\n      return this._canvas.clientWidth;\n    }\n    return 0;\n  };\n\n  /**\n   * Get all keyframes under the screen rectangle.\n   * @param screenRect screen coordinates to get keyframes.\n   */\n  _getKeyframesByRectangle = (screenRect: DOMRect): TimelineKeyframe[] => {\n    const keyframesModels: Array<TimelineKeyframe> = [];\n    this._forEachKeyframe((keyframeViewModel) => {\n      const intersects =\n        keyframeViewModel.shape === TimelineKeyframeShape.Rect\n          ? TimelineUtils.isRectIntersects(keyframeViewModel.size, screenRect)\n          : TimelineUtils.isOverlap(keyframeViewModel.size.x, keyframeViewModel.size.y, screenRect);\n\n      if (intersects) {\n        keyframesModels.push(keyframeViewModel.model);\n      }\n    });\n    return keyframesModels;\n  };\n\n  /**\n   * Private.\n   * Perform timeline click.\n   */\n  _performClick = (pos: TimelineMouseData, drag: TimelineDraggableData | null): boolean => {\n    let isChanged = false;\n    if (drag && drag.type === TimelineElementType.Keyframe) {\n      let mode = TimelineSelectionMode.Normal;\n      if (this._startedDragWithCtrl && this._controlKeyPressed(pos.args)) {\n        if (this._controlKeyPressed(pos.args)) {\n          mode = TimelineSelectionMode.Revert;\n        }\n      } else if (this._startedDragWithShiftKey && pos.args.shiftKey) {\n        mode = TimelineSelectionMode.Append;\n      }\n      // Reverse selected keyframe selection by a click:\n      isChanged = this._selectInternal(drag?.target?.keyframe || null, mode).selectionChanged || isChanged;\n\n      if (pos.args.shiftKey && this._options?.timelineDraggable !== false) {\n        // Set current timeline position if it's not a drag or selection rect small or fast click.\n        isChanged = this._setTimeInternal(pos.val, TimelineEventSource.User) || isChanged;\n      }\n    } else {\n      // deselect keyframes if any:\n      isChanged = this._selectInternal(null).selectionChanged || isChanged;\n\n      if (this._options?.timelineDraggable !== false) {\n        // change timeline pos:\n        // Set current timeline position if it's not a drag or selection rect small or fast click.\n        isChanged = this._setTimeInternal(pos.val, TimelineEventSource.User) || isChanged;\n      }\n    }\n\n    return isChanged;\n  };\n  /**\n   * Set keyframe value.\n   * @param keyframe\n   * @param value\n   * @return set value.\n   */\n  _setKeyframePos = (element: TimelineElementDragState, value: number, source: TimelineEventSource = TimelineEventSource.Programmatically): number => {\n    if (!element || !element.keyframe) {\n      return value;\n    }\n    value = Math.floor(value);\n    if (element.keyframe && element.keyframe.val != value) {\n      element.prevVal = element.val;\n      element.val = value;\n      element.keyframe.val = value;\n      const event = this._emitKeyframeChanged(element, source);\n      if (event.isPrevented()) {\n        element.val = event.prevVal;\n        element.keyframe.val = event.prevVal;\n      }\n\n      return value;\n    }\n\n    return value;\n  };\n\n  /**\n   * @param cursor to set.\n   */\n  _setCursor = (cursor: string): void => {\n    if (this._canvas && this._canvas.style.cursor != cursor) {\n      this._canvas.style.cursor = cursor;\n    }\n  };\n\n  /**\n   * Set component interaction mode.\n   */\n  public setInteractionMode = (mode: TimelineInteractionMode): void => {\n    if (this._interactionMode != mode) {\n      this._interactionMode = mode;\n      // Avoid any conflicts with other modes, clean current state.\n      this._cleanUpSelection(true);\n      this.redraw();\n    }\n  };\n  /**\n   * Get current interaction mode.\n   */\n  public getInteractionMode = (): TimelineInteractionMode => {\n    return this._interactionMode;\n  };\n  /**\n   * Private.\n   * Helper method. Convert model element  to timeline element.\n   */\n  _convertToTimelineElement = (rowModel: TimelineRow | null, keyframe: TimelineKeyframe): TimelineElement => {\n    const data = {\n      type: TimelineElementType.Keyframe,\n      val: keyframe.val,\n      keyframe: keyframe,\n      row: rowModel,\n    } as TimelineElement;\n    return data;\n  };\n\n  public getSelectedKeyframes = (): TimelineKeyframe[] => {\n    const selected = this.getSelectedElements();\n    return selected.map((p) => p.keyframe) as TimelineKeyframe[];\n  };\n\n  /**\n   * Get selected timeline elements.\n   */\n  public getSelectedElements = (): TimelineElement[] => {\n    const selected: TimelineElement[] = [];\n    this._forEachKeyframe((keyframe): void => {\n      if (keyframe && keyframe.model.selected) {\n        selected.push(this._convertToTimelineElement(keyframe.rowViewModel.model, keyframe.model));\n      }\n      return;\n    });\n\n    return selected;\n  };\n  /**\n   * Get all keyframe models available in the model.\n   */\n  public getAllKeyframes = (): TimelineKeyframe[] => {\n    const keyframes: TimelineKeyframe[] = [];\n    this._forEachKeyframe((keyframe): void => {\n      keyframes.push(keyframe.model);\n    });\n\n    return keyframes;\n  };\n\n  public selectAllKeyframes = (): TimelineSelectionResults => {\n    return this.select(this.getAllKeyframes(), TimelineSelectionMode.Normal);\n  };\n  public deselectAll = (): TimelineSelectionResults => {\n    return this.select(null);\n  };\n\n  private _changeNodeState = (state: TimelineSelectionResults, node: TimelineKeyframe, value: boolean): boolean => {\n    if (node.selected !== value) {\n      const selectable = typeof node.selectable === 'boolean' ? node.selectable : true;\n      if (!value || (value && selectable)) {\n        node.selected = value;\n        state.changed.push(node);\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  public select = (nodes: TimelineKeyframe[] | TimelineKeyframe | null, mode = TimelineSelectionMode.Normal): TimelineSelectionResults => {\n    const results = this._selectInternal(nodes, mode);\n    if (results.selectionChanged) {\n      this.redraw();\n    }\n    return results;\n  };\n\n  /**\n   * Select keyframes\n   * @param nodes keyframe or list of the keyframes to be selected.\n   * @param mode selection mode.\n   */\n  public _selectInternal = (nodes: TimelineKeyframe[] | TimelineKeyframe | null, mode = TimelineSelectionMode.Normal): TimelineSelectionResults => {\n    if (!nodes) {\n      nodes = [];\n    }\n    if (!Array.isArray(nodes)) {\n      nodes = [nodes];\n    }\n\n    const state = {\n      selectionChanged: false,\n      selected: this.getSelectedKeyframes(),\n      changed: [] as Array<any>,\n    } as TimelineSelectionResults;\n    const nodesArray = nodes as TimelineKeyframe[];\n    //const state = this.selectedSubject.getValue();\n    if (nodesArray && mode === TimelineSelectionMode.Append) {\n      nodes.forEach((node) => {\n        const changed = this._changeNodeState(state, node, true);\n        if (changed && node.selected) {\n          state.selected.push(node);\n        }\n      });\n    } else if (nodesArray && mode === TimelineSelectionMode.Revert) {\n      nodes.forEach((node) => {\n        if (state.selected.indexOf(node) >= 0) {\n          this._changeNodeState(state, node, false);\n          TimelineUtils.deleteElement<TimelineKeyframe>(state.selected, node);\n        } else {\n          this._changeNodeState(state, node, true);\n          if (node.selected) {\n            state.selected.push(node);\n          }\n        }\n      });\n    } else if (mode === TimelineSelectionMode.Normal) {\n      const selectedItems: Array<TimelineKeyframe> = [];\n      if (nodes) {\n        nodes.forEach((node) => {\n          this._changeNodeState(state, node, true);\n          if (node.selected) {\n            selectedItems.push(node);\n          }\n        });\n      }\n\n      state.selected.forEach((node) => {\n        const exists = nodesArray.indexOf(node) >= 0;\n        // Deselect\n        if (!exists) {\n          this._changeNodeState(state, node, false);\n        }\n      });\n\n      if (state.changed.length > 0) {\n        if (selectedItems) {\n          state.selected = selectedItems;\n        } else {\n          state.selected.length = 0;\n        }\n      }\n    }\n\n    if (state.changed.length > 0) {\n      state.selectionChanged = true;\n      this._emitKeyframesSelected(state);\n    }\n\n    return state;\n  };\n\n  /**\n   * foreach visible keyframe.\n   */\n  _forEachKeyframe(callback: (keyframe: TimelineKeyframeViewModel, index?: number, newRow?: boolean) => void): void {\n    if (!callback) {\n      return;\n    }\n    if (!this._model) {\n      return;\n    }\n\n    const calculatedModel = this._generateViewModel();\n    if (!calculatedModel) {\n      return;\n    }\n\n    calculatedModel?.rowsViewModels?.forEach((rowViewModel) => {\n      if (!rowViewModel) {\n        return;\n      }\n\n      let nextRow = true;\n      rowViewModel.keyframesViewModels.forEach((keyframeViewModel, keyframeIndex) => {\n        if (keyframeViewModel) {\n          callback(keyframeViewModel, keyframeIndex, nextRow);\n        }\n\n        nextRow = false;\n      });\n    });\n  }\n\n  /**\n   * Private.\n   * Create extended mouse position and calculate size of the selection rectangle.\n   */\n  _trackMousePos(canvas: HTMLCanvasElement, mouseArgs: MouseEvent | TouchEvent): TimelineMouseData {\n    const clickArgs = this._getMousePos(canvas, mouseArgs);\n    const pos = clickArgs.pos;\n    clickArgs.originalVal = this._mousePosToVal(pos.x, false);\n    clickArgs.snapVal = this._mousePosToVal(pos.x, true);\n    clickArgs.val = clickArgs.originalVal;\n    if (this._options && this._options.snapEnabled) {\n      clickArgs.val = clickArgs.snapVal;\n    }\n\n    if (this._startPosMouseArgs) {\n      if (!this._selectionRect) {\n        this._selectionRect = {} as DOMRect;\n      }\n      const startPos = this._startPosMouseArgs.pos;\n      // get the pos with the virtualization:\n      const x = Math.floor(startPos.x + ((this._scrollStartPos?.x || 0) - this.scrollLeft));\n      const y = Math.floor(startPos.y + ((this._scrollStartPos?.y || 0) - this.scrollTop));\n      this._selectionRect.x = Math.min(x, pos.x);\n      this._selectionRect.y = Math.min(y, pos.y);\n      this._selectionRect.width = Math.max(x, pos.x) - this._selectionRect.x;\n      this._selectionRect.height = Math.max(y, pos.y) - this._selectionRect.y;\n      // Once mouse was moved outside of the bounds it's not a click anymore\n      if (this._clickAllowed) {\n        this._clickAllowed = this._selectionRect.height <= this._consts.clickThreshold && this._selectionRect.width <= this._consts.clickThreshold;\n      }\n    }\n\n    return clickArgs;\n  }\n\n  /**\n   * Get scroll container client width.\n   */\n  getClientWidth(): number {\n    return this._scrollContainer?.clientWidth || 0;\n  }\n  /**\n   * Get scroll container client height.\n   */\n  getClientHeight(): number {\n    return this._scrollContainer?.clientHeight || 0;\n  }\n  _cleanUpSelection(forcePrevent = false): void {\n    if (this._drag) {\n      this._emitDragFinishedEvent(this._drag, forcePrevent);\n    }\n    this._startPosMouseArgs = null;\n    this._drag = null;\n    this._scrollAreaClickOrDragStarted = false;\n    this._startedDragWithCtrl = false;\n    this._startedDragWithShiftKey = false;\n    this._selectionRect = null;\n    this._clickTimeout = null;\n    this._scrollStartPos = null;\n    this._isPanStarted = false;\n    this._clickAllowed = false;\n    this._stopAutoPan();\n  }\n\n  /**\n   * Check whether click timeout is over.\n   */\n  _clickTimeoutIsOver(): boolean {\n    // Duration before the selection can be tracked.\n    if (this._clickTimeout && Date.now() - this._clickTimeout > this._consts.clickDetectionMs) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Automatically pan. Scroll canvas when selection is made and mouse outside of the bounds.\n   */\n  _startAutoPan = (): void => {\n    if (this._consts.autoPanSpeed) {\n      if (!this._intervalRef) {\n        // Repeat move calls to\n        this._intervalRef = window.setInterval(() => {\n          this._handleMouseMoveEvent(null);\n        }, this._consts.autoPanSpeed);\n      }\n    }\n  };\n\n  /**\n   * Stop current running auto pan\n   */\n  _stopAutoPan = (): void => {\n    if (this._intervalRef) {\n      clearInterval(this._intervalRef);\n      this._intervalRef = null;\n    }\n\n    this._autoPanLastActionDate = 0;\n  };\n\n  /**\n   * Check whether auto pan should be slowed down a bit.\n   */\n  _checkUpdateSpeedTooFast(): boolean {\n    // Slow down updated a bit.\n    if (this._autoPanLastActionDate && Date.now() - this._autoPanLastActionDate <= this._consts.autoPanSpeedLimit) {\n      return true;\n    }\n\n    this._autoPanLastActionDate = Date.now();\n    return false;\n  }\n\n  /**\n   * Scroll virtual canvas when pan mode is enabled.\n   */\n  _scrollByPan(start: DOMPoint, pos: DOMPoint, scrollStartPos: DOMPoint | null): void {\n    if (!start || !pos || !this._scrollContainer) {\n      return;\n    }\n    let x = 0;\n    let y = 0;\n    if (scrollStartPos) {\n      x = scrollStartPos.x;\n      y = scrollStartPos.y;\n    }\n    const offsetX = Math.round(start.x - pos.x);\n    const newLeft = x + offsetX;\n\n    if (offsetX > 0) {\n      this._rescaleInternal(newLeft + this._canvasClientWidth());\n    }\n\n    if (offsetX > 0 && newLeft + this._canvasClientWidth() >= this._scrollContainer.scrollWidth - 5) {\n      this.scrollLeft = this._scrollContainer.scrollWidth;\n    } else {\n      this.scrollLeft = newLeft;\n    }\n    this.scrollTop = Math.round(y + start.y - pos.y);\n  }\n\n  _scrollBySelectionOutOfBounds(pos: DOMPoint): boolean {\n    if (!this._scrollContainer) {\n      return false;\n    }\n    const x = pos.x;\n    const y = pos.y;\n    let isChanged = false;\n    let speedX = 0;\n    let speedY = 0;\n    // Small offset to start auto pan earlier.\n    const bounds = this._consts.autoPanByScrollPadding;\n    const isLeft = x <= bounds;\n    const isRight = x >= this._canvasClientWidth() - bounds;\n    const isTop = y <= bounds;\n    const isBottom = y >= this._canvasClientHeight() - bounds;\n    let newWidth = null;\n    let newHeight = null;\n    if (isLeft || isRight || isTop || isBottom) {\n      // Auto move init\n      this._startAutoPan();\n\n      if (this._checkUpdateSpeedTooFast()) {\n        return false;\n      }\n\n      const scrollSpeedMultiplier = isNaN(this._consts.scrollByDragSpeed) ? 1 : this._consts.scrollByDragSpeed;\n      if (isLeft) {\n        // Get normalized speed.\n        speedX = -TimelineUtils.getDistance(x, bounds) * scrollSpeedMultiplier;\n      } else if (isRight) {\n        // Get normalized speed:\n        speedX = TimelineUtils.getDistance(x, this._canvasClientWidth() - bounds) * scrollSpeedMultiplier;\n        newWidth = this.scrollLeft + this._canvasClientWidth() + speedX;\n      }\n\n      if (isTop) {\n        // Get normalized speed.\n        speedY = (-TimelineUtils.getDistance(x, bounds) * scrollSpeedMultiplier) / 4;\n      } else if (isBottom) {\n        // Get normalized speed:\n        speedY = (TimelineUtils.getDistance(x, this._canvasClientHeight() - bounds) * scrollSpeedMultiplier) / 4;\n        newHeight = this._scrollContainer.scrollTop + this._canvasClientHeight();\n      }\n    } else {\n      this._stopAutoPan();\n    }\n\n    if (newWidth || newHeight) {\n      this._rescaleInternal(newWidth, newHeight, TimelineScrollSource.ScrollBySelection);\n    }\n\n    if (Math.abs(speedX) > 0) {\n      this.scrollLeft = this._scrollContainer.scrollLeft + speedX;\n      isChanged = true;\n    }\n\n    if (Math.abs(speedY) > 0) {\n      this.scrollTop = this._scrollContainer.scrollTop + speedY;\n      isChanged = true;\n    }\n\n    return isChanged;\n  }\n\n  /**\n   * Convert screen pixel to value.\n   */\n  public pxToVal(px: number): number {\n    if (!this._options) {\n      return px;\n    }\n    let min = this._options.min || 0;\n    if (!TimelineUtils.isNumber(min)) {\n      min = 0;\n    }\n    const stepPx = this._options.stepPx || 0;\n    if (stepPx === 0) {\n      return px;\n    }\n    min *= this._currentZoom || 1;\n    const steps = (this._options.stepVal || 0) * this._currentZoom || 1;\n    const val = min + (px / stepPx) * steps;\n    return val;\n  }\n\n  /**\n   * Convert value to local screen component coordinates.\n   */\n  _toScreenPx = (val: number): number => {\n    return this.valToPx(val) - this.scrollLeft + this._leftMargin();\n  };\n  /**\n   * Convert screen local coordinates to a global value info.\n   */\n  _fromScreen = (px: number): number => {\n    return this.pxToVal(this.scrollLeft + px - this._leftMargin());\n  };\n  /**\n   * Convert area value to global screen pixel coordinates.\n   */\n  public valToPx = (val: number): number => {\n    if (!this._options || !this._options.stepPx) {\n      return val;\n    }\n    let min = this._options.min || 0;\n    if (!TimelineUtils.isNumber(min)) {\n      min = 0;\n    }\n    min *= this._currentZoom || 1;\n    const steps = (this._options.stepVal || 0) * this._currentZoom || 1;\n    return (-min + val) * (this._options.stepPx / steps);\n  };\n\n  /**\n   * Snap a value to a nearest grid point.\n   */\n  public snapVal(val: number): number {\n    // Snap a value if configured.\n    if (this._options && this._options.snapEnabled && this._options.snapStep) {\n      const stops = this._options.snapStep;\n      const step = val / stops;\n      const stepsFit = Math.round(step);\n      const minSteps = Math.abs(this._options.min || 0) / this._options.snapStep;\n      const minOffset = TimelineUtils.sign(this._options.min || 1) * (minSteps - Math.floor(minSteps)) * this._options.snapStep;\n      val = Math.round(minOffset) + Math.round(stepsFit * stops);\n    }\n\n    val = TimelineUtils.keepInBounds(val, this._options.min, this._options.max);\n    return val;\n  }\n\n  /**\n   * Convert mouse position to the timeline units considering all the scrolling and offsets.\n   */\n  _mousePosToVal = (x: number, snapEnabled = false): number => {\n    const mousePos = Math.min(x, this._canvasClientWidth());\n    let convertedVal = this._fromScreen(mousePos);\n    convertedVal = Math.round(convertedVal);\n    if (snapEnabled) {\n      convertedVal = this.snapVal(convertedVal);\n    }\n\n    return convertedVal;\n  };\n\n  /**\n   * Format line gauge text.\n   * Default formatting is HMS\n   * @param ms milliseconds to convert.\n   * @param isSeconds whether seconds are passed.\n   */\n  _formatUnitsText = (ms: number, isSeconds = false): string => {\n    const sign = TimelineUtils.sign(ms) < 0 ? '-' : '';\n    ms = Math.abs(ms);\n    // 1- Convert to seconds:\n    let seconds = ms / 1000;\n    if (isSeconds) {\n      seconds = ms;\n    }\n\n    const year = Math.floor(seconds / (365 * 86400));\n    seconds = seconds % (365 * 86400);\n\n    const days = Math.floor(seconds / 86400);\n    seconds = seconds % 86400;\n\n    // 2- Extract hours:\n    const hours = Math.floor(seconds / 3600); // 3,600 seconds in 1 hour\n    seconds = seconds % 3600; // seconds remaining after extracting hours\n    // 3- Extract minutes:\n    const minutes = Math.floor(seconds / 60); // 60 seconds in 1 minute\n    // 4- Keep only seconds not extracted to minutes:\n    seconds = seconds % 60;\n    let str = '';\n    if (year) {\n      str += year + ':';\n    }\n\n    if (days) {\n      str += days + ':';\n    }\n\n    if (hours) {\n      str += hours + ':';\n    }\n\n    if (minutes) {\n      str += minutes + ':';\n    }\n\n    if (!isNaN(seconds)) {\n      str += seconds;\n    }\n\n    return sign + str;\n  };\n  /**\n   * Left padding of the timeline.\n   */\n  _leftMargin = (): number => {\n    return this._options?.leftMargin || 0;\n  };\n  /**\n   * Private.\n   * Render line gauge ticks.\n   */\n  _renderTicks = (): void => {\n    if (!this._ctx || !this._ctx.canvas || this._ctx.canvas.clientWidth <= 0 || this._ctx.canvas.clientHeight <= 0 || !this._options || !this._options.stepPx) {\n      return;\n    }\n    const screenWidth = this._canvasClientWidth() - this._leftMargin();\n    let from = this.pxToVal(this.scrollLeft);\n    let to = this.pxToVal(this.scrollLeft + screenWidth);\n    if (isNaN(from) || isNaN(to) || from === to) {\n      return;\n    }\n\n    if (to < from) {\n      const wasToVal = to;\n      to = from;\n      from = wasToVal;\n    }\n\n    const valDistance = TimelineUtils.getDistance(from, to);\n    if (valDistance <= 0) {\n      return;\n    }\n\n    // Find the nearest 'beautiful' step for a gauge.\n    // 'beautiful' step should be dividable by 1/2/5/10!\n    const step = TimelineUtils.findGoodStep(valDistance / (screenWidth / this._options.stepPx));\n\n    // Find beautiful start point:\n    const fromVal = Math.floor(from / step) * step;\n\n    // Find a beautiful end point:\n    const toVal = Math.ceil(to / step) * step + step;\n\n    if (!TimelineUtils.isNumber(step) || step <= 0 || Math.abs(toVal - fromVal) === 0) {\n      return;\n    }\n    let smallStep = 0;\n    if (this._options.stepSmallPx) {\n      smallStep = TimelineUtils.findGoodStep(valDistance / (screenWidth / this._options.stepSmallPx));\n    }\n\n    let lastTextStart = 0;\n    this._ctx.save();\n    const headerHeight = TimelineStyleUtils.headerHeight(this._options);\n    const tickHeight = headerHeight / 2;\n    const smallTickHeight = headerHeight / 1.3;\n    for (let i = fromVal; i <= toVal; i += step) {\n      // local\n      const sharpPos = this._getSharp(this._toScreenPx(i));\n      this._ctx.save();\n      this._ctx.beginPath();\n      this._ctx.setLineDash([4]);\n      this._ctx.lineWidth = 1;\n      if (this._options.tickColor) {\n        this._ctx.strokeStyle = this._options.tickColor;\n      }\n      TimelineUtils.drawLine(this._ctx, sharpPos, tickHeight, sharpPos, headerHeight);\n      this._ctx.stroke();\n      if (this._options.labelsColor) {\n        this._ctx.fillStyle = this._options.labelsColor;\n      }\n      if (this._options.font) {\n        this._ctx.font = this._options.font;\n      }\n\n      const text = this._formatUnitsText(i);\n      const textSize = this._ctx.measureText(text);\n\n      const textX = sharpPos - textSize.width / 2;\n      // skip text render if there is no space for it.\n      if (isNaN(lastTextStart) || lastTextStart <= textX) {\n        lastTextStart = textX + textSize.width;\n        this._ctx.fillText(text, textX, 10);\n      }\n\n      this._ctx.restore();\n      if (!TimelineUtils.isNumber(smallStep) || smallStep <= 0) {\n        continue;\n      }\n      // Draw small steps\n      for (let x = i + smallStep; x < i + step; x += smallStep) {\n        // local\n        const nextSharpPos = this._getSharp(this._toScreenPx(x));\n        this._ctx.beginPath();\n        this._ctx.lineWidth = this._pixelRatio;\n        if (this._options.tickColor) {\n          this._ctx.strokeStyle = this._options.tickColor;\n        }\n        TimelineUtils.drawLine(this._ctx, nextSharpPos, smallTickHeight, nextSharpPos, headerHeight);\n        this._ctx.stroke();\n      }\n    }\n\n    this._ctx.restore();\n  };\n\n  /**\n   * Private.\n   * Calculate virtual view model.\n   * Determine screen positions for the model elements given.\n   */\n  _generateViewModel = (): TimelineViewModel => {\n    const toReturn = {\n      size: {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0,\n      } as DOMRect,\n      min: null,\n      max: null,\n      rowsViewModels: [],\n      keyframesViewModels: [],\n    } as TimelineViewModel;\n\n    if (!this._model) {\n      return toReturn;\n    }\n    const rows = this._model.rows;\n    if (!rows || !Array.isArray(rows) || rows.length <= 0) {\n      return toReturn;\n    }\n    let rowAbsoluteHeight = TimelineStyleUtils.headerHeight(this._options);\n    rows.forEach((row, index) => {\n      if (!row || row.hidden) {\n        return;\n      }\n\n      // draw with scroll virtualization:\n      const rowHeight = TimelineStyleUtils.getRowHeight(row.style || null, this._options);\n      const marginBottom = TimelineStyleUtils.getRowMarginBottom(row.style || null, this._options);\n      const currentRowY = rowAbsoluteHeight - (this._scrollContainer ? this._scrollContainer.scrollTop : 0);\n      rowAbsoluteHeight += rowHeight + marginBottom;\n      if (index == 0) {\n        toReturn.size.y = currentRowY;\n      }\n\n      toReturn.size.height = Math.max(rowAbsoluteHeight + rowHeight, toReturn.size.height);\n      const rowSize = { x: 0, y: currentRowY, width: this._canvasClientWidth(), height: rowHeight } as DOMRect;\n      const rowViewModel = {\n        size: rowSize,\n        marginBottom: marginBottom,\n        model: row,\n        index: index,\n        min: null,\n        max: null,\n        groupsViewModels: [],\n        keyframesViewModels: [],\n      } as TimelineRowViewModel;\n      toReturn.rowsViewModels.push(rowViewModel);\n      if (!row.keyframes || !row.keyframes.forEach || row.keyframes.length <= 0) {\n        return;\n      }\n\n      // Get min and max ms to draw keyframe rows:\n      if (row && row.keyframes) {\n        row.keyframes.forEach((keyframe) => {\n          if (!keyframe || !TimelineUtils.isNumber(keyframe.val)) {\n            console.log('Unexpected null keyframe or having invalid value');\n            return;\n          }\n          if (keyframe.hidden) {\n            return;\n          }\n          let groupViewModel: TimelineGroupViewModel | null = rowViewModel.groupsViewModels?.find((p) => keyframe.group === p.groupModel) || null;\n          if (!groupViewModel) {\n            groupViewModel = {\n              min: keyframe.val,\n              max: keyframe.val,\n              size: null,\n              groupModel: keyframe.group,\n              keyframesViewModels: [],\n            } as TimelineGroupViewModel;\n            // TimelineStyleUtils.groupFillColor(rowViewModel.model.style || null, this._options);\n            rowViewModel.groupsViewModels.push(groupViewModel);\n          }\n          const keyframeShape = TimelineStyleUtils.keyframeShape(keyframe, keyframe.group, row.style || null, this._options);\n          const keyframeSize = this._getKeyframePosition(keyframe, groupViewModel, rowViewModel, keyframeShape);\n          const keyframeViewModel = {\n            model: keyframe,\n            rowViewModel: rowViewModel,\n            groupViewModel: groupViewModel,\n            size: keyframeSize,\n            shape: keyframeShape,\n          } as TimelineKeyframeViewModel;\n\n          const min = groupViewModel.min === null ? keyframe.val : Math.min(keyframe.val, groupViewModel.min);\n          const max = groupViewModel.max === null ? keyframe.val : Math.max(keyframe.val, groupViewModel.max);\n          if (TimelineUtils.isNumber(min)) {\n            groupViewModel.min = min;\n          }\n          if (TimelineUtils.isNumber(max)) {\n            groupViewModel.max = max;\n          }\n          // All keyframes in the row\n          rowViewModel.keyframesViewModels.push(keyframeViewModel);\n          // All keyframes in the group\n          groupViewModel.keyframesViewModels.push(keyframeViewModel);\n          // All keyframes in the component\n          toReturn.keyframesViewModels.push(keyframeViewModel);\n        });\n      }\n\n      rowViewModel.groupsViewModels.forEach((groupViewModel) => {\n        // Extend row min max bounds by a group bounds. It's used to notify needed visible bounds for the row.\n        TimelineUtils.setMinMax(rowViewModel, groupViewModel, true);\n        // get group screen coords\n        const groupRect = this._getKeyframesGroupSize(groupViewModel, rowViewModel);\n        groupViewModel.size = groupRect;\n      });\n\n      // Extend screen bounds by a current calculation:\n      TimelineUtils.setMinMax(toReturn, rowViewModel, true);\n    });\n    if (TimelineUtils.isNumber(toReturn.max) && (toReturn.max || toReturn.max === 0)) {\n      toReturn.size.width = this.valToPx(toReturn.max);\n    }\n    return toReturn;\n  };\n\n  /**\n   * Render timeline rows.\n   */\n  _renderRows = (): void => {\n    if (!this._ctx) {\n      return;\n    }\n    const viewModel = this._generateViewModel();\n    if (!viewModel?.rowsViewModels) {\n      return;\n    }\n    try {\n      this._ctx.save();\n\n      viewModel.rowsViewModels.forEach((rowViewModel) => {\n        if (!rowViewModel || !this._ctx) {\n          return;\n        }\n\n        this._ctx.fillStyle = TimelineStyleUtils.getRowFillColor(rowViewModel.model.style || null, this._options);\n        //this._ctx.fillRect(data.areaRect.x, data.areaRect.y, data.areaRect.w, data.areaRect.h);\n        // Note: bounds used instead of the clip while clip is slow!\n        const bounds = this._cutBounds(rowViewModel.size);\n        if (bounds?.rect) {\n          const rect = bounds?.rect;\n          this._ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n        }\n\n        this._renderGroupBounds(rowViewModel);\n      });\n    } finally {\n      this._ctx.restore();\n    }\n  };\n  /**\n   * Render group for the row.\n   */\n  _renderGroupBounds = (rowViewModel: TimelineRowViewModel): void => {\n    if (!rowViewModel || !this._ctx) {\n      return;\n    }\n\n    rowViewModel?.groupsViewModels?.forEach((groupsViewModels) => {\n      if (!this._ctx) {\n        return;\n      }\n      const keyframeLaneColor = TimelineStyleUtils.groupFillColor(this._options, groupsViewModels.groupModel, rowViewModel?.model?.style);\n      if (!keyframeLaneColor) {\n        return;\n      }\n      if (!groupsViewModels.size) {\n        console.log('Size of the group cannot be calculated');\n        return;\n      }\n\n      // get the bounds on a canvas\n      const rectBounds = this._cutBounds(groupsViewModels.size);\n      if (rectBounds?.rect) {\n        this._ctx.fillStyle = keyframeLaneColor;\n        const rect = rectBounds.rect;\n        this._ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n      }\n    });\n  };\n  /**\n   * Method is used for the canvas drawing optimization.\n   * Bounds are cut to draw only visible parts for the active canvas.\n   */\n  _cutBounds = (rect: DOMRect): TimelineCutBoundsRectResults | null => {\n    if (!rect) {\n      return null;\n    }\n    // default bounds: minX, maxX, minY, maxY\n    const testOffset = 0;\n    const minX = 0 + testOffset;\n    const maxX = this._canvasClientWidth() - testOffset;\n    const minY = TimelineStyleUtils.headerHeight(this._options) + testOffset;\n    const maxY = this._canvasClientHeight() - testOffset;\n\n    return this._cutBoundsWhenOverlap(rect, minX, maxX, minY, maxY);\n  };\n  _cutBoundsWhenOverlap = (rect: DOMRect, minX: number, maxX: number, minY: number, maxY: number): TimelineCutBoundsRectResults | null => {\n    if (!rect) {\n      return null;\n    }\n\n    if (\n      // At the moment it's a check of top and left intersection.\n      TimelineUtils.isRectIntersects(rect, {\n        x: minX,\n        y: minY,\n        width: TimelineUtils.getDistance(minX, maxX),\n        height: TimelineUtils.getDistance(minY, maxY),\n      } as DOMRect)\n    ) {\n      const y = Math.max(rect.y, minY);\n      const x = Math.max(rect.x, minX);\n      const offsetW = rect.x - x;\n      const offsetH = rect.y - y;\n\n      return {\n        rect: { height: rect.height + offsetH, width: rect.width + offsetW, x: x, y: y },\n        overlapY: Math.abs(offsetH) > 0,\n        overlapX: Math.abs(offsetW) > 0,\n      } as TimelineCutBoundsRectResults;\n    }\n    return null;\n  };\n  /**\n   * Calculate keyframe group screen rect size that is used during the rendering.\n   * @param row\n   * @param rowY row screen coords y position\n   */\n  _getKeyframesGroupSize = (groupViewModel: TimelineGroupViewModel, rowViewModel: TimelineRowViewModel): DOMRect => {\n    const rowY = rowViewModel.size.y;\n    const rowHeight = rowViewModel.size.height;\n    const groupModel = groupViewModel.groupModel || null;\n    let groupHeight = TimelineStyleUtils.groupHeight(this._options, groupModel, rowViewModel?.model?.style);\n\n    let marginTop = TimelineStyleUtils.groupMarginTop(this._options, groupModel, rowViewModel?.model?.style);\n    const isAutoHeight = groupHeight === 'auto';\n    if (!groupHeight || isAutoHeight) {\n      groupHeight = Math.floor(rowHeight);\n    }\n    groupHeight = typeof groupHeight === 'string' ? parseInt(groupHeight) : groupHeight;\n    if (groupHeight > rowHeight) {\n      groupHeight = rowHeight;\n    }\n    const isAutoMargin = marginTop === 'auto';\n    if (typeof marginTop === 'string') {\n      if (isAutoMargin) {\n        marginTop = (rowHeight - groupHeight) / 2;\n      } else {\n        marginTop = parseInt(marginTop) || 0;\n      }\n    }\n\n    if (!isAutoMargin) {\n      if (isAutoHeight) {\n        groupHeight -= marginTop * 2;\n      }\n    }\n\n    // draw keyframes rows.\n    const xMin = this._toScreenPx(groupViewModel.min); // local\n    const xMax = this._toScreenPx(groupViewModel.max); // local\n\n    return {\n      x: xMin,\n      y: rowY + marginTop,\n      height: groupHeight,\n      width: TimelineUtils.getDistance(xMin, xMax),\n    } as DOMRect;\n  };\n\n  _getKeyframePosition = (keyframe: TimelineKeyframe, groupViewModel: TimelineGroupViewModel, rowViewModel: TimelineRowViewModel, keyframeShape: TimelineKeyframeShape): DOMRect | null => {\n    if (!keyframe) {\n      console.log('keyframe should be defined.');\n      return null;\n    }\n\n    const val = keyframe.val;\n    if (!TimelineUtils.isNumber(val)) {\n      return null;\n    }\n\n    const rowSize = rowViewModel.size;\n    // get center of the lane:\n    let y = rowSize.y + rowSize.height / 2;\n    const groupModel = groupViewModel?.groupModel || null;\n    let height: number | string = TimelineStyleUtils.keyframeHeight(keyframe, groupModel, rowViewModel?.model?.style, this._options);\n    let width: number | string = TimelineStyleUtils.keyframeWidth(keyframe, groupModel, rowViewModel?.model?.style, this._options);\n\n    if (height === 'auto') {\n      height = rowSize.height / 3;\n    }\n    if (width === 'auto') {\n      width = height;\n    }\n    if (height > 0) {\n      const x = Math.floor(this._toScreenPx(val));\n      y = Math.floor(y);\n      const rect = {\n        x: x, // local\n        y: y,\n        height: height,\n        width: width,\n      } as DOMRect;\n      // Rect we are drawing in the center\n      if (keyframeShape === TimelineKeyframeShape.Rect) {\n        rect.y = rect.y - rect.height / 2;\n        rect.x = rect.x - rect.width / 2;\n      }\n      return rect;\n    }\n\n    return null;\n  };\n\n  _renderKeyframes = (): void => {\n    this._forEachKeyframe((keyframeViewModel) => {\n      if (!this._ctx) {\n        return;\n      }\n      const row = keyframeViewModel.rowViewModel.model;\n      const size = keyframeViewModel.size;\n      const keyframe = keyframeViewModel.model;\n      if (size) {\n        const x = this._getSharp(size.x);\n        const y = size.y;\n        const bounds = this._cutBounds({\n          x: x - size.width / 2,\n          y: y - size.height / 2,\n          width: size.width,\n          height: size.height,\n        } as DOMRect);\n        if (!bounds) {\n          return;\n        }\n\n        this._ctx.save();\n\n        // Performance FIX: use clip only  when we are in the collision! Clip is slow!\n        // Other keyframes should be hidden by bounds check.\n        if (bounds && bounds.overlapY) {\n          this._ctx.beginPath();\n          this._ctx.rect(0, TimelineStyleUtils.headerHeight(this._options), this._canvasClientWidth(), this._canvasClientWidth());\n          this._ctx.clip();\n        }\n\n        const shape = keyframeViewModel.shape;\n        if (shape === TimelineKeyframeShape.None) {\n          return;\n        }\n        const rowStyle = row.style || null;\n        const groupModel = keyframeViewModel?.groupViewModel?.groupModel || null;\n        const keyframeColor = keyframe.selected\n          ? TimelineStyleUtils.keyframeSelectedFillColor(keyframe, groupModel, rowStyle, this._options)\n          : TimelineStyleUtils.keyframeFillColor(keyframe, groupModel, rowStyle, this._options);\n        const border = TimelineStyleUtils.keyframeStrokeThickness(keyframe, groupModel, rowStyle, this._options);\n        let strokeColor = '';\n        if (border > 0) {\n          if (keyframe.selected) {\n            strokeColor = TimelineStyleUtils.keyframeSelectedStrokeColor(keyframe, groupModel, rowStyle, this._options);\n          } else {\n            strokeColor = TimelineStyleUtils.keyframeStrokeColor(keyframe, groupModel, rowStyle, this._options);\n          }\n        }\n\n        if (shape == TimelineKeyframeShape.Rhomb) {\n          this._ctx.beginPath();\n          this._ctx.translate(x, y);\n          this._ctx.rotate((45 * Math.PI) / 180);\n          if (border > 0 && strokeColor) {\n            this._ctx.fillStyle = strokeColor;\n            this._ctx.rect(-size.width / 2, -size.height / 2, size.width, size.height);\n            this._ctx.fill();\n          }\n\n          this._ctx.fillStyle = keyframeColor;\n          // draw main keyframe data with offset.\n          this._ctx.translate(border, border);\n          this._ctx.rect(-size.width / 2, -size.height / 2, size.width - border * 2, size.height - border * 2);\n          this._ctx.fill();\n        } else if (shape == TimelineKeyframeShape.Circle) {\n          this._ctx.beginPath();\n          if (border > 0 && strokeColor) {\n            this._ctx.fillStyle = strokeColor;\n            this._ctx.arc(x, y, size.height, 0, 2 * Math.PI);\n          }\n          this._ctx.fillStyle = keyframeColor;\n          this._ctx.arc(x, y, size.height - border, 0, 2 * Math.PI);\n          this._ctx.fill();\n        } else if (shape == TimelineKeyframeShape.Rect) {\n          this._ctx.beginPath();\n\n          if (border > 0 && strokeColor) {\n            this._ctx.fillStyle = strokeColor;\n            this._ctx.rect(x, y, size.width, size.height);\n            this._ctx.fill();\n          }\n\n          this._ctx.fillStyle = keyframeColor;\n          this._ctx.rect(x + border, y + border, size.width - border, size.height - border);\n          this._ctx.fill();\n        }\n\n        this._ctx.restore();\n      }\n    });\n  };\n\n  _renderSelectionRect = (): void => {\n    if (this._drag || !this._ctx || !this._canvas) {\n      return;\n    }\n    this._ctx.save();\n    const thickness = 1;\n    if (this._selectionRect && this._selectionRectEnabled) {\n      this._ctx.setLineDash([4]);\n      this._ctx.lineWidth = this._pixelRatio;\n      const selectionColor = this._options.selectionColor;\n      if (selectionColor) {\n        this._ctx.strokeStyle = selectionColor;\n      }\n      this._ctx.strokeRect(\n        this._getSharp(this._selectionRect.x, thickness),\n        this._getSharp(this._selectionRect.y, thickness),\n        Math.floor(this._selectionRect.width),\n        Math.floor(this._selectionRect.height),\n      );\n    }\n    this._ctx.restore();\n  };\n\n  _renderBackground = (): void => {\n    if (!this._ctx || !this._canvas) {\n      return;\n    }\n    if (this._options.fillColor) {\n      this._ctx.save();\n      this._ctx.beginPath();\n      this._ctx.rect(0, 0, this._canvasClientWidth(), this._canvasClientHeight());\n      this._ctx.fillStyle = this._options.fillColor;\n      this._ctx.fill();\n      this._ctx.restore();\n    } else {\n      // Clear if bg not set.\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  };\n\n  _renderTimeline = (): void => {\n    if (!this._ctx || !this._options || !this._options.timelineStyle) {\n      return;\n    }\n    const style = this._options.timelineStyle;\n    this._ctx.save();\n    try {\n      const thickness = style.width || 1;\n      this._ctx.lineWidth = thickness * this._pixelRatio;\n      const timeLinePos = this._getSharp(this._toScreenPx(this._val), thickness);\n      if (style.strokeColor) {\n        this._ctx.strokeStyle = style.strokeColor;\n      }\n      if (style.fillColor) {\n        this._ctx.fillStyle = style.fillColor;\n      }\n      const y = style.marginTop || 0;\n      const yBottom = style.marginBottom || 0;\n      this._ctx.beginPath();\n      const canvasHeight = this._canvasClientHeight() - yBottom;\n      TimelineUtils.drawLine(this._ctx, timeLinePos, y, timeLinePos, canvasHeight);\n      this._ctx.stroke();\n      this._renderTimelineCap(timeLinePos, y);\n    } finally {\n      this._ctx.restore();\n    }\n  };\n  /**\n   * Render timeline cap top.\n   */\n  _renderTimelineCap = (timeLinePos: number, y: number): void => {\n    const capStyle = this._options?.timelineStyle?.capStyle;\n    if (!this._ctx || !capStyle) {\n      return;\n    }\n    if (capStyle.capType === TimelineCapShape.None) {\n      return;\n    }\n    this._ctx.save();\n    try {\n      const capSize = capStyle.width || 0;\n      const capHeight = capStyle.height || 0;\n      if (capSize && capHeight) {\n        this._ctx.strokeStyle = capStyle.strokeColor;\n        this._ctx.fillStyle = capStyle.fillColor;\n        if (capStyle.capType === TimelineCapShape.Triangle) {\n          this._ctx.beginPath();\n          this._ctx.moveTo(timeLinePos - capSize / 2, y);\n          this._ctx.lineTo(timeLinePos + capSize / 2, y);\n          this._ctx.lineTo(timeLinePos, capHeight);\n          this._ctx.closePath();\n          this._ctx.stroke();\n        } else if (capStyle.capType === TimelineCapShape.Rect) {\n          this._ctx.fillRect(timeLinePos - capSize / 2, y, capSize, capHeight);\n          this._ctx.fill();\n        }\n      }\n    } finally {\n      this._ctx.restore();\n    }\n  };\n  _renderHeaderBackground = (): void => {\n    if (!this._ctx || !this._options) {\n      return;\n    }\n    if (TimelineStyleUtils.headerHeight(this._options)) {\n      this._ctx.save();\n      // draw ticks background\n      this._ctx.lineWidth = this._pixelRatio;\n      if (this._options.headerFillColor) {\n        // draw ticks background\n        this._ctx.lineWidth = this._pixelRatio;\n        // draw header background\n        this._ctx.fillStyle = this._options.headerFillColor;\n        this._ctx.fillRect(0, 0, this._canvasClientWidth(), TimelineStyleUtils.headerHeight(this._options));\n      } else {\n        this._ctx.clearRect(0, 0, this._canvasClientWidth(), TimelineStyleUtils.headerHeight(this._options));\n      }\n      this._ctx.restore();\n    }\n  };\n\n  redraw = (): void => {\n    if (window.requestAnimationFrame) {\n      window.requestAnimationFrame(this._redrawInternal);\n    } else {\n      this._redrawInternal();\n    }\n  };\n\n  /**\n   * perform scroll to max right.\n   */\n  public scrollToRightBounds = (): void => {\n    if (this._scrollContainer && this._scrollContainer.scrollLeft !== this._scrollContainer.scrollWidth) {\n      this.scrollLeft = this._scrollContainer.scrollWidth;\n    }\n  };\n\n  /**\n   * Redraw parts of the component in the specific order.\n   */\n  _redrawInternal = (): void => {\n    if (!this._ctx || !this._scrollContainer) {\n      console.log('Context is not initialized');\n      return;\n    }\n    // Rescale when animation is played out of the bounds.\n    if (this.valToPx(this._val) > this._scrollContainer.scrollWidth) {\n      this.rescale();\n      if (!this._isPanStarted && this._drag && this._drag.type !== TimelineElementType.Timeline) {\n        this.scrollToRightBounds();\n      }\n    }\n\n    this._renderBackground();\n    this._renderRows();\n    // Render after rows\n    this._renderHeaderBackground();\n    this._renderTicks();\n    this._renderKeyframes();\n    this._renderSelectionRect();\n    this._renderTimeline();\n  };\n\n  /**\n   * Find sharp pixel position\n   */\n  _getSharp = (pos: number, thickness = 1): number => {\n    pos = Math.round(pos);\n    if (thickness % 2 == 0) {\n      return pos;\n    }\n\n    return pos + this._pixelRatio / 2;\n  };\n\n  /**\n   * Get current time:\n   */\n  public getTime = (): number => {\n    return this._val;\n  };\n\n  /**\n   * Set current time internal\n   * @param val value.\n   * @param source event source.\n   */\n  _setTimeInternal = (val: number, source: TimelineEventSource = TimelineEventSource.Programmatically): boolean => {\n    if (!this._options) {\n      return false;\n    }\n    val = Math.round(val);\n    val = TimelineUtils.keepInBounds(val, this._options.min);\n    if (this._val != val) {\n      const prevVal = this._val;\n      const timelineEvent = new TimelineTimeChangedEvent();\n      timelineEvent.val = val;\n      timelineEvent.prevVal = prevVal;\n      timelineEvent.source = source;\n      this._val = val;\n      this.emit(TimelineEvents.TimeChanged, timelineEvent);\n      if (timelineEvent.isPrevented()) {\n        this._val = prevVal;\n        return false;\n      }\n      return true;\n    }\n\n    return false;\n  };\n  public setTime = (val: number): boolean => {\n    // don't allow to change time during drag:\n    if (this._drag && this._drag.type === TimelineElementType.Timeline) {\n      return false;\n    }\n\n    const isChanged = this._setTimeInternal(val, TimelineEventSource.SetTimeMethod);\n    if (isChanged) {\n      this.rescale();\n      this.redraw();\n    }\n\n    return isChanged;\n  };\n\n  public getOptions = (): TimelineOptions => {\n    return this._options;\n  };\n\n  /**\n   * Current scroll left position.\n   */\n  public get scrollLeft(): number {\n    return this._scrollContainer?.scrollLeft || 0;\n  }\n  public set scrollLeft(value: number) {\n    if (this._scrollContainer && this._scrollContainer.scrollLeft !== value) {\n      this._scrollProgrammatically = true;\n      this._scrollContainer.scrollLeft = value;\n    }\n  }\n  public get scrollTop(): number {\n    return this._scrollContainer?.scrollTop || 0;\n  }\n\n  public set scrollTop(value: number) {\n    if (this._scrollContainer && this._scrollContainer.scrollTop !== value) {\n      this._scrollProgrammatically = true;\n      this._scrollContainer.scrollTop = value;\n    }\n  }\n\n  /**\n   * Set options and render the component.\n   * Note: Options will be merged\\appended with the defaults and component will be invalidated/rendered again.\n   */\n  public setOptions = (toSet: TimelineOptions): TimelineOptions => {\n    this._options = this._setOptions(toSet);\n    this.rescale();\n    this.redraw();\n    // Merged options:\n    return this._options;\n  };\n\n  /**\n   * Private. Apply html container styles from options if any is set.\n   */\n  _applyContainersStyles = (): void => {\n    if (this._scrollContainer && this._options) {\n      const classList = this._scrollContainer.classList;\n      if (this._options.scrollContainerClass && !classList.contains(this._options.scrollContainerClass)) {\n        classList.add(this._options.scrollContainerClass);\n      }\n      if (this._options.fillColor) {\n        this._scrollContainer.style.background = this._options.fillColor;\n      }\n    }\n  };\n  _setOptions = (toSet: TimelineOptions): TimelineOptions => {\n    if (!toSet) {\n      return this._options || {};\n    }\n    this._options = TimelineUtils.mergeOptions(this._options, toSet);\n    // Normalize and validate spans per value.\n    this._options.snapStep = TimelineUtils.keepInBounds(this._options.snapStep || 0, 0, this._options.stepVal || 0);\n    this._currentZoom = this._setZoom(this._options.zoom || 0, this._options.zoomMin, this._options.zoomMax);\n    this._options.min = TimelineUtils.isNumber(this._options.min) ? this._options.min : 0;\n    this._options.max = TimelineUtils.isNumber(this._options.max) ? this._options.max : Number.MAX_VALUE;\n    this._applyContainersStyles();\n    // Prevent current active dragging of the timeline, while it's set that it's not allowed anymore.\n    if (toSet.timelineDraggable === false) {\n      if (this._drag && this._drag.type === TimelineElementType.Timeline) {\n        this._cleanUpSelection();\n      }\n    }\n    return this._options;\n  };\n\n  /**\n   * Get current model.\n   */\n  public getModel = (): TimelineModel | null => {\n    return this._model;\n  };\n\n  /**\n   * Set model and redraw application.\n   * @param data\n   */\n  public setModel = (data: TimelineModel): void => {\n    this._model = data;\n    this.rescale();\n    this.redraw();\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _getMousePos = (canvas: HTMLCanvasElement, e: TouchEvent | MouseEvent | any): TimelineMouseData => {\n    let radius = 1;\n    let clientX = 0;\n    let clientY = 0;\n    if (e.changedTouches && e.changedTouches.length > 0) {\n      // TODO: implement better touch support\n      const touch = e.changedTouches[0];\n      clientX = touch.clientX;\n      clientY = touch.clientY;\n      radius = Math.max(radius, touch.radiusX, touch.radiusY);\n    } else {\n      clientX = e.clientX;\n      clientY = e.clientY;\n    }\n\n    const rect = canvas.getBoundingClientRect(), // abs. size of element\n      scaleX = canvas.width / this._pixelRatio / rect.width, // relationship bitmap vs. element for X\n      scaleY = canvas.height / this._pixelRatio / rect.height; // relationship bitmap vs. element for Y\n\n    const x = (clientX - rect.left) * scaleX;\n    const y = (clientY - rect.top) * scaleY;\n    // scale mouse coordinates after they have been adjusted to be relative to element\n    return {\n      pos: { x, y } as DOMPoint,\n      radius,\n      args: e,\n    } as TimelineMouseData;\n  };\n\n  /**\n   * Apply container div size to the container on changes detected.\n   */\n  _updateCanvasScale = (): boolean => {\n    if (!this._scrollContainer || !this._container || !this._ctx) {\n      console.log('Component should be initialized first.');\n      return false;\n    }\n    let changed = false;\n    const width = this._scrollContainer.clientWidth * this._pixelRatio;\n    const height = this._scrollContainer.clientHeight * this._pixelRatio;\n    if (Math.floor(width) != Math.floor(this._ctx.canvas.width)) {\n      this._ctx.canvas.width = width;\n      changed = true;\n    }\n\n    if (Math.floor(height) != Math.floor(this._ctx.canvas.height)) {\n      this._ctx.canvas.height = height;\n      changed = true;\n    }\n\n    if (changed) {\n      this._ctx.setTransform(this._pixelRatio, 0, 0, this._pixelRatio, 0, 0);\n    }\n    return changed;\n  };\n\n  /**\n   * Rescale and update size of the container.\n   */\n  public rescale = (): boolean => {\n    return this._rescaleInternal();\n  };\n\n  /**\n   * This method is used to draw additional space when after there are no keyframes.\n   * When scrolled we should allow to indefinitely scroll right, so space should be extended to drag keyframes outside of the current size bounds.\n   */\n  _rescaleInternal = (newWidth: number | null = null, newHeight: number | null = null, scrollMode = TimelineScrollSource.DefaultMode): boolean => {\n    let changed = this._updateCanvasScale();\n    if (!this._scrollContent) {\n      return changed;\n    }\n    const data = this._generateViewModel();\n    if (data && data.size) {\n      const additionalOffset = this._options.stepPx || 0;\n      newWidth = newWidth || 0;\n      // content should be not less than current timeline position + width of the timeline\n      const timelineGlobalPos = this.valToPx(this._val) + this._leftMargin();\n      let timelinePos = 0;\n      const rightPosition = this.scrollLeft + this.getClientWidth();\n\n      if (timelineGlobalPos >= rightPosition) {\n        if (scrollMode == TimelineScrollSource.ScrollBySelection) {\n          // When item (timeline, selection rectangle) is just dragged to the right corner.\n          timelinePos = Math.floor(timelineGlobalPos + this._leftMargin());\n        } else {\n          // When timeline is playing and we need to add next screen (when timeline goes out of the bounds.)\n          timelinePos = Math.floor(timelineGlobalPos + this.getClientWidth() + this._leftMargin());\n        }\n      }\n      const keyframeW = data.size.width + this._leftMargin() + additionalOffset;\n\n      newWidth = Math.max(\n        // New expected component width.\n        newWidth,\n        // keyframes max width\n        keyframeW,\n        // not less than current scroll position\n        rightPosition,\n        timelinePos,\n      );\n\n      const minWidthPx = Math.floor(newWidth) + 'px';\n      if (minWidthPx != this._scrollContent.style.minWidth) {\n        this._scrollContent.style.minWidth = minWidthPx;\n        changed = true;\n      }\n\n      newHeight = Math.max(\n        // active size\n        Math.floor(data.size.height + this._canvasClientHeight() * 0.2),\n        (this._scrollContainer?.scrollTop || 0) + this._canvasClientHeight() - 1,\n        Math.round(newHeight || 0),\n      );\n\n      const h = Math.floor(newHeight) + 'px';\n      if (this._scrollContent.style.minHeight != h) {\n        this._scrollContent.style.minHeight = h;\n        return changed;\n      }\n    }\n    return changed;\n  };\n\n  /**\n   * Filter elements that can be dragged.\n   * Filtration is done based on the timeline styles and options.\n   */\n  _filterDraggableElements = (elements: TimelineElement[]): TimelineElement[] => {\n    // filter and sort: Timeline, individual keyframes, groups (distance).\n    const filteredElements = elements.filter((element) => {\n      if (!element) {\n        return false;\n      }\n      if (element.type === TimelineElementType.Keyframe) {\n        if (!TimelineStyleUtils.keyframeDraggable(element.keyframe || null, element.keyframe?.group || null, element?.row || null, this._options)) {\n          return false;\n        }\n      } else if (element.type === TimelineElementType.Group) {\n        if (!TimelineStyleUtils.groupDraggable(element.group || null, element.row || null, this._options)) {\n          return false;\n        }\n      } else if (element.type === TimelineElementType.Timeline) {\n        if (this._options?.timelineDraggable === false) {\n          return false;\n        }\n      } else if (element.type === TimelineElementType.Row) {\n        return false;\n      }\n      return true;\n    });\n    return filteredElements;\n  };\n  /**\n   * Filter and sort draggable elements by the priority to get first draggable element closest to the passed value.\n   */\n  _findDraggableElement = (elements: TimelineElement[], val: number | null = null): TimelineElement | null => {\n    // filter and sort: Timeline, individual keyframes, groups (distance).\n    const getPriority = (type: TimelineElementType): number => {\n      if (type === TimelineElementType.Timeline) {\n        return 1;\n      } else if (type === TimelineElementType.Keyframe) {\n        return 2;\n      } else if (type === TimelineElementType.Group) {\n        return 3;\n      }\n      return -1;\n    };\n\n    const sortDraggable = (a: TimelineElement, b: TimelineElement): number => {\n      let prioA = getPriority(a.type);\n      let prioB = getPriority(b.type);\n      if (prioA === prioB) {\n        if (val === null) {\n          return 0;\n        }\n\n        // Sort by distance\n        prioA = TimelineUtils.getDistance(a.val, val);\n        prioB = TimelineUtils.getDistance(b.val, val);\n        if (prioA === prioB) {\n          return 0;\n        }\n        return prioA < prioB ? 1 : -1;\n      }\n\n      return prioA < prioB ? 1 : -1;\n    };\n    const sorted = this._filterDraggableElements(elements).sort(sortDraggable);\n    if (sorted.length > 0) {\n      return sorted[sorted.length - 1];\n    }\n\n    return null;\n  };\n  /**\n   * get all clickable elements by the given local screen coordinate.\n   */\n  public elementFromPoint = (pos: DOMPoint, clickRadius: number, onlyTypes?: TimelineElementType[] | null): TimelineElement[] => {\n    clickRadius = Math.max(clickRadius, 1);\n    const toReturn: TimelineElement[] = [];\n\n    if (!pos) {\n      return toReturn;\n    }\n\n    const headerHeight = TimelineStyleUtils.headerHeight(this._options);\n    // Check whether we can drag timeline.\n    const timeLinePos = this._toScreenPx(this._val);\n    let width = 0;\n    const timelineStyle = this._options?.timelineStyle;\n    if (timelineStyle) {\n      width = Math.max((timelineStyle.width || 1) * this._pixelRatio, (timelineStyle?.capStyle?.width || 0) * this._pixelRatio || 1) + clickRadius;\n    }\n    // Allow to select timeline only by half of a header to allow select by a selector top most keyframes row.\n    if (pos.y <= headerHeight * 0.5 || (pos.x >= timeLinePos - width / 2 && pos.x <= timeLinePos + width / 2)) {\n      toReturn.push({\n        val: this._val,\n        type: TimelineElementType.Timeline,\n      } as TimelineElement);\n    }\n    const snap = this._options.snapEnabled;\n    if (pos.y >= headerHeight && this._options.keyframesDraggable) {\n      this._forEachKeyframe((keyframeViewModel, _, isNextRow): void => {\n        const rowViewModel = keyframeViewModel.rowViewModel;\n        // Check keyframes group overlap\n        if (isNextRow) {\n          const rowOverlapped = TimelineUtils.isOverlap(pos.x, pos.y, rowViewModel.size);\n          if (rowOverlapped) {\n            const row = {\n              val: this._mousePosToVal(pos.x, snap),\n              keyframes: rowViewModel.model.keyframes,\n              type: TimelineElementType.Row,\n              row: rowViewModel.model,\n            } as TimelineElement;\n            toReturn.push(row);\n          }\n          if (rowViewModel.groupsViewModels) {\n            rowViewModel.groupsViewModels.forEach((groupViewModel) => {\n              if (!groupViewModel?.size) {\n                return;\n              }\n              const keyframesGroupOverlapped = TimelineUtils.isOverlap(pos.x, pos.y, groupViewModel.size);\n              if (keyframesGroupOverlapped) {\n                const keyframesModels = groupViewModel?.keyframesViewModels.map((p) => p.model) || [];\n                const groupElement = {\n                  // TODO:\n                  val: this._mousePosToVal(pos.x, snap),\n                  type: TimelineElementType.Group,\n                  group: groupViewModel.groupModel,\n                  row: rowViewModel.model,\n                  keyframes: keyframesModels,\n                } as TimelineElement;\n\n                const snapped = this.snapVal(groupViewModel.min);\n                // get snapped mouse pos based on a min value.\n                groupElement.val += groupViewModel.min - snapped;\n                toReturn.push(groupElement);\n              }\n            });\n          }\n        }\n\n        const keyframePosRect = keyframeViewModel.size;\n        if (keyframePosRect) {\n          let isMouseOver = false;\n          if (keyframeViewModel.shape === TimelineKeyframeShape.Rect) {\n            const extendedMouseRect = TimelineUtils.shrinkSelf({ x: pos.x, y: pos.y, height: clickRadius, width: clickRadius } as DOMRect, clickRadius);\n            isMouseOver = TimelineUtils.isRectIntersects(extendedMouseRect, keyframePosRect, true);\n          } else {\n            const dist = TimelineUtils.getDistance(keyframePosRect.x, keyframePosRect.y, pos.x, pos.y);\n            isMouseOver = dist <= keyframePosRect.height + clickRadius;\n          }\n          if (isMouseOver) {\n            toReturn.push({\n              keyframe: keyframeViewModel.model,\n              keyframes: [keyframeViewModel.model],\n              val: keyframeViewModel.model.val,\n              row: keyframeViewModel.rowViewModel.model,\n              type: TimelineElementType.Keyframe,\n            } as TimelineElement);\n          }\n        }\n      });\n    }\n\n    if (!onlyTypes || onlyTypes.length === 0) {\n      return toReturn;\n    } else {\n      return toReturn.filter((p) => onlyTypes && onlyTypes.includes(p.type));\n    }\n  };\n\n  /**\n   * Subscribe user callback on time changed.\n   */\n  public onTimeChanged = (callback: (eventArgs: TimelineTimeChangedEvent) => void): void => {\n    this.on(TimelineEvents.TimeChanged, callback);\n  };\n  /**\n   * Subscribe user callback on drag started event.\n   */\n  public onDragStarted = (callback: (eventArgs: TimelineDragEvent) => void): void => {\n    this.on(TimelineEvents.DragStarted, callback);\n  };\n  /**\n   * Subscribe user callback on drag event.\n   */\n  public onDrag = (callback: (eventArgs: TimelineDragEvent) => void): void => {\n    this.on(TimelineEvents.Drag, callback);\n  };\n  /**\n   * Subscribe user callback on drag finished event.\n   */\n  public onDragFinished = (callback: (eventArgs: TimelineDragEvent) => void): void => {\n    this.on(TimelineEvents.DragFinished, callback);\n  };\n  /**\n   * Subscribe user callback on double click.\n   */\n  public onDoubleClick = (callback: (eventArgs: TimelineClickEvent) => void): void => {\n    this.on(TimelineEvents.DoubleClick, callback);\n  };\n  /**\n   * Subscribe user callback on keyframe changed event.\n   */\n  public onKeyframeChanged = (callback: (eventArgs: TimelineKeyframeChangedEvent) => void): void => {\n    this.on(TimelineEvents.KeyframeChanged, callback);\n  };\n  /**\n   * Subscribe user callback on drag finished event.\n   */\n  public onMouseDown = (callback: (eventArgs: TimelineClickEvent) => void): void => {\n    this.on(TimelineEvents.MouseDown, callback);\n  };\n\n  /**\n   * Subscribe user callback on selected.\n   */\n  public onSelected = (callback: (eventArgs: TimelineSelectedEvent) => void): void => {\n    this.on(TimelineEvents.Selected, callback);\n  };\n  /**\n   * Subscribe user callback on scroll event\n   */\n  public onScroll = (callback: (eventArgs: TimelineScrollEvent) => void): void => {\n    this.on(TimelineEvents.Scroll, callback);\n  };\n  /**\n   * Subscribe on scroll finished event.\n   */\n  public onScrollFinished = (callback: (eventArgs: TimelineScrollEvent) => void): void => {\n    this.on(TimelineEvents.ScrollFinished, callback);\n  };\n  /**\n   * Private.\n   * Emit internally scroll eve\n   */\n  _emitScrollEvent = (args: Event | null, scrollProgrammatically: boolean, eventType = TimelineEvents.Scroll): TimelineScrollEvent => {\n    const scrollEvent = {\n      args: args,\n      scrollProgrammatically: scrollProgrammatically,\n      scrollLeft: this.scrollLeft,\n      scrollTop: this.scrollTop,\n      scrollHeight: this._scrollContainer?.scrollHeight || 0,\n      scrollWidth: this._scrollContainer?.scrollWidth || 0,\n    } as TimelineScrollEvent;\n    super.emit(eventType, scrollEvent);\n    return scrollEvent;\n  };\n  _emitKeyframeChanged = (element: TimelineElementDragState, source: TimelineEventSource = TimelineEventSource.Programmatically): TimelineKeyframeChangedEvent => {\n    const args = new TimelineKeyframeChangedEvent();\n    args.val = element.val;\n    args.prevVal = element.prevVal;\n    args.target = element;\n    args.source = source;\n    this.emit(TimelineEvents.KeyframeChanged, args);\n    return args;\n  };\n  _emitDragStartedEvent = (dragState: TimelineDraggableData): TimelineDragEvent | null => {\n    if (!dragState) {\n      return null;\n    }\n    const args = this._getDragEventArgs(dragState, this._currentPos);\n    this.emit(TimelineEvents.DragStarted, args);\n    if (args.isPrevented()) {\n      this._preventDrag(args, dragState, true);\n    }\n    return args;\n  };\n  /**\n   * Private emit timeline event that dragging element is finished.\n   * @param forcePrevent - needed when during dragging components set to the state when they cannot be dragged anymore. (used only as recovery state).\n   * @returns\n   */\n  _emitDragFinishedEvent = (dragState: TimelineDraggableData, forcePrevent = false): TimelineDragEvent | null => {\n    if (!dragState || !dragState.changed) {\n      return null;\n    }\n    const args = this._getDragEventArgs(dragState, this._currentPos);\n    if (forcePrevent) {\n      args.preventDefault();\n    }\n    this.emit(TimelineEvents.DragFinished, args);\n    if (args.isPrevented()) {\n      this._preventDrag(args, dragState, true);\n    }\n    return args;\n  };\n  _preventDrag = (dragArgs: TimelineDragEvent, data: TimelineDraggableData, toStart = false): void => {\n    if (dragArgs.elements) {\n      dragArgs.elements.forEach((element) => {\n        const toSet = toStart ? element.startedVal : element.prevVal;\n        this._setKeyframePos(element, toSet);\n      });\n    }\n    data.val = data.prevVal;\n    // Set prev active point\n    dragArgs.point = dragArgs.prevPoint;\n  };\n  _emitDragEvent = (dragState: TimelineDraggableData): TimelineDragEvent | null => {\n    if (!dragState) {\n      return null;\n    }\n    const args = this._getDragEventArgs(dragState, this._currentPos);\n    this.emit<TimelineDragEvent>(TimelineEvents.Drag, args);\n    if (args.isPrevented()) {\n      this._preventDrag(args, dragState, false);\n    }\n    return args;\n  };\n  _emitKeyframesSelected = (state: TimelineSelectionResults): TimelineSelectedEvent => {\n    const args = new TimelineSelectedEvent();\n    args.selected = state.selected;\n    args.changed = state.changed;\n    this.emit<TimelineSelectedEvent>(TimelineEvents.Selected, args);\n    return args;\n  };\n  _getDragEventArgs = (dragState: TimelineDraggableData, point: TimelineMouseData | null): TimelineDragEvent => {\n    const draggableArguments = new TimelineDragEvent();\n    draggableArguments.point = point;\n    // Get cloned list\n    draggableArguments.elements = [...(dragState.elements || [])];\n    draggableArguments.target = dragState?.target || null;\n    return draggableArguments;\n  };\n}\n","// bundle entry point\n\nexport * from './timeline';\nexport * from './timelineEventsEmitter';\nexport * from './settings/timelineConsts';\n// @ public timeline models.\nexport * from './models/timelineRanged';\nexport * from './models/timelineModel';\nexport * from './models/timelineRow';\nexport * from './models/timelineKeyframe';\n\n// @public styles\nexport * from './settings/timelineOptions';\nexport * from './settings/styles/timelineKeyframeStyle';\nexport * from './settings/styles/timelineRowStyle';\nexport * from './settings/styles/timelineStyle';\n\nexport * from './utils/timelineStyleUtils';\nexport * from './utils/timelineUtils';\nexport * from './utils/timelineElement';\n\n// @private helper containers.\nexport * from './utils/timelineSelectable';\nexport * from './utils/timelineCutBoundsRectResults';\nexport * from './utils/timelineSelectionResults';\nexport * from './utils/timelinePoint';\nexport * from './utils/timelineMouseData';\nexport * from './utils/timelineElementDragState';\nexport * from './utils/timelineDraggableData';\n\n// @private virtual model\nexport * from './viewModels/timelineGroupViewModel';\nexport * from './viewModels/timelineKeyframeViewModel';\nexport * from './viewModels/timelineRowViewModel';\nexport * from './viewModels/timelineViewModel';\n\n// @public events\nexport * from './utils/events/timelineKeyframeChangedEvent';\nexport * from './utils/events/timelineTimeChangedEvent';\nexport * from './utils/events/timelineSelectedEvent';\nexport * from './utils/events/timelineScrollEvent';\nexport * from './utils/events/timelineClickEvent';\nexport * from './utils/events/timelineDragEvent';\n\n// @public enums\nexport * from './enums/timelineKeyframeShape';\nexport * from './enums/timelineInteractionMode';\nexport * from './enums/timelineScrollSource';\nexport * from './enums/timelineElementType';\nexport * from './enums/timelineCursorType';\nexport * from './enums/timelineCapShape';\nexport * from './enums/timelineEventSource';\nexport * from './enums/timelineSelectionMode';\nexport * from './enums/timelineEvents';\n// @private defaults are exposed:\nexport * from './settings/defaults/defaultTimelineStyle';\nexport * from './settings/defaults/defaultTimelineRowStyle';\nexport * from './settings/defaults/defaultTimelineOptions';\nexport * from './settings/defaults/defaultTimelineKeyframeStyle';\nexport * from './settings/defaults/defaultTimelineConsts';\nexport * from './settings/defaults/defaultGroupStyle';\n"],"names":["TimelineEventsEmitter","topic","callback","_subscriptions","push","before","length","filter","event","args","forEach","TimelineKeyframeShape","denominators","TimelineUtils","ctx","x1","y1","x2","y2","moveTo","lineTo","val","isNaN","Number","isFinite","array","element","index","indexOf","splice","x","y","rectangle","width","height","originalStep","divisionCheck","step","lastDistance","pow","getPowArgument","i","denominator","calculatedStep","Math","distance","getDistance","value","min","max","isNumber","to","from","shrink","fromMin","NaN","toMin","isFromMinNumber","isToMinNumber","fromMax","toMax","isFromMaxNumber","isToMaxNumber","rect","rect2","touch","console","log","right","bottom","undefined","sqrt","abs","p","window","getSelection","selection","removeAllRanges","doc","document","empty","toCheck","category","s","sign","floor","zerosCount","previousOptions","newOptions","toArg","cloneOptions","mergeOptionsDeep","key","Object","prototype","hasOwnProperty","call","JSON","parse","stringify","clonedValue","id","defaultRowHeight","margin","defaultGroupStyle","marginTop","fillColor","defaultTimelineKeyframeStyle","shape","Rhomb","selectedFillColor","strokeColor","selectedStrokeColor","strokeThickness","defaultTimelineRowStyle","marginBottom","keyframesStyle","groupsStyle","undefinedConst","TimelineStyleUtils","groupModel","style","getGroup","defaultValue","params","getValue","returnFalseIfAnyFalse","valuesFound","found","toReturn","getValueOrDefault","keyframe","group","rowStyle","options","getFirstSet","getGroupStyle","rowsStyle","headerHeight","row","findFirstNegativeBool","boolResult","draggable","keyframesDraggable","groupsDraggable","TimelineElementType","TimelineDraggableData","None","TimelineBaseEvent","_prevented","TimelineKeyframeChangedEvent","TimelineEventSource","TimelineTimeChangedEvent","User","TimelineSelectionEventSource","TimelineSelectedEvent","Keyframes","TimelineClickEvent","point","pos","TimelineDragEvent","TimelineInteractionMode","TimelineCursorType","TimelineCapShape","TimelineSelectionMode","TimelineEvents","TimelineScrollSource","defaultTimelineConsts","autoPanSpeed","scrollByDragSpeed","clickDetectionMs","doubleClickTimeoutMs","scrollFinishedTimeoutMs","autoPanByScrollPadding","clickThreshold","clickDetectionMinRadius","autoPanSpeedLimit","defaultGroupHeight","defaultTimelineStyle","capStyle","capType","Rect","cursor","EWResize","defaultTimelineOptions","snapAllKeyframesOnMove","snapEnabled","timelineStyle","stepPx","stepVal","stepSmallPx","snapStep","leftMargin","headerFillColor","labelsColor","tickColor","selectionColor","font","zoom","zoomSpeed","zoomMin","zoomMax","controlKeyIsMetaKey","scrollContainerClass","timelineDraggable","MAX_VALUE","Timeline","model","Selection","_model","Error","_generateContainers","_options","_setOptions","_subscribeComponentEvents","rescale","redraw","HTMLElement","_container","getElementById","_scrollContainer","createElement","_scrollContent","_canvas","getContext","position","cssText","appendChild","scrollBarWidth","offsetWidth","clientWidth","_ctx","_getCtx","_unsubscribeComponentEvents","addEventListener","_handleWheelEvent","_handleScrollEvent","_handleScrollMouseDownEvent","_handleKeyUp","_handleKeyDown","_handleBlurEvent","_handleWindowResizeEvent","_handleMouseDownEvent","_handleMouseMoveEvent","_handleMouseUpEvent","removeEventListener","warn","offAll","_stopAutoPan","_clearScrollFinishedTimer","_cleanUpSelection","_interactionMode","Zoom","_setZoomCursor","e","_controlKeyPressed","_setCursor","ZoomOut","ZoomIn","_scrollFinishedTimerRef","clearTimeout","_scrollAreaClickOrDragStarted","scrollProgrammatically","_scrollProgrammatically","setTimeout","_isPanStarted","_emitScrollEvent","ScrollFinished","_consts","metaKey","ctrlKey","preventDefault","mousePosArguments","_getMousePos","mousePos","_zoom","deltaY","scrollTop","direction","speed","deltaSpeed","_canvasClientWidth","diff","_fromScreen","_currentZoom","_setZoom","zoomCenter","valToPx","newScrollLeft","round","_rescaleInternal","ZoomMode","scrollLeft","keepInBounds","prevZoom","getZoom","zoomSet","radius","clearBrowserSelection","_startPosMouseArgs","_trackMousePos","isDoubleClick","Date","now","_lastClickTime","_lastClickPoint","_scrollStartPos","_clickAllowed","onlyElements","NonInteractivePan","clickRadius","_getClickDetectionRadius","elements","elementFromPoint","target","_findDraggableElement","DoubleClick","MouseDown","_clickTimeout","isPrevented","_currentPos","_drag","type","_setElementDragState","Keyframe","_startedDragWithCtrl","_startedDragWithShiftKey","shiftKey","selected","_selectInternal","getSelectedElements","map","Group","keyframes","Array","isArray","_convertToTimelineElement","state","prevVal","startedVal","buttons","_lastUsedArgs","touchEventArgs","isTouch","changedTouches","_selectionRect","_clickTimeoutIsOver","_selectionRectEnabled","isLeftClicked","isLeftButtonClicked","convertedVal","_setTimeInternal","offset","movedOffset","_moveElements","changed","eventArgs","_emitDragStartedEvent","_emitDragEvent","Pan","Grabbing","_scrollByPan","_scrollBySelectionOutOfBounds","Grab","Default","Pointer","mouseArgs","_performClick","_getKeyframesByRectangle","selectionMode","Append","Normal","select","clientHeight","screenRect","keyframesModels","_forEachKeyframe","keyframeViewModel","intersects","isRectIntersects","size","isOverlap","drag","isChanged","mode","Revert","selectionChanged","source","Programmatically","_emitKeyframeChanged","rowModel","data","rowViewModel","getAllKeyframes","node","selectable","nodes","results","getSelectedKeyframes","nodesArray","_changeNodeState","deleteElement","selectedItems","exists","_emitKeyframesSelected","_intervalRef","setInterval","clearInterval","_autoPanLastActionDate","_leftMargin","px","pxToVal","steps","snapVal","ms","isSeconds","seconds","year","days","hours","minutes","str","canvas","screenWidth","wasToVal","valDistance","findGoodStep","fromVal","toVal","ceil","smallStep","lastTextStart","save","tickHeight","smallTickHeight","sharpPos","_getSharp","_toScreenPx","beginPath","setLineDash","lineWidth","strokeStyle","drawLine","stroke","fillStyle","text","_formatUnitsText","textSize","measureText","textX","fillText","restore","nextSharpPos","_pixelRatio","rowsViewModels","keyframesViewModels","rows","rowAbsoluteHeight","hidden","rowHeight","getRowHeight","getRowMarginBottom","currentRowY","rowSize","groupsViewModels","groupViewModel","find","keyframeShape","keyframeSize","_getKeyframePosition","setMinMax","groupRect","_getKeyframesGroupSize","viewModel","_generateViewModel","getRowFillColor","bounds","_cutBounds","fillRect","_renderGroupBounds","keyframeLaneColor","groupFillColor","rectBounds","testOffset","minX","maxX","minY","maxY","_canvasClientHeight","_cutBoundsWhenOverlap","offsetW","offsetH","overlapY","overlapX","rowY","groupHeight","groupMarginTop","isAutoHeight","parseInt","isAutoMargin","xMin","xMax","keyframeHeight","keyframeWidth","clip","keyframeColor","keyframeSelectedFillColor","keyframeFillColor","border","keyframeStrokeThickness","keyframeSelectedStrokeColor","keyframeStrokeColor","translate","rotate","PI","fill","Circle","arc","thickness","strokeRect","clearRect","timeLinePos","_val","yBottom","canvasHeight","_renderTimelineCap","capSize","capHeight","Triangle","closePath","requestAnimationFrame","_redrawInternal","scrollWidth","scrollToRightBounds","_renderBackground","_renderRows","_renderHeaderBackground","_renderTicks","_renderKeyframes","_renderSelectionRect","_renderTimeline","timelineEvent","emit","TimeChanged","SetTimeMethod","toSet","classList","contains","add","background","mergeOptions","_applyContainersStyles","clientX","clientY","radiusX","radiusY","getBoundingClientRect","scaleX","scaleY","left","top","setTransform","newWidth","newHeight","scrollMode","DefaultMode","_updateCanvasScale","additionalOffset","timelineGlobalPos","timelinePos","rightPosition","getClientWidth","ScrollBySelection","keyframeW","minWidthPx","minWidth","h","minHeight","filteredElements","keyframeDraggable","groupDraggable","Row","getPriority","sortDraggable","a","b","prioA","prioB","sorted","_filterDraggableElements","sort","onlyTypes","snap","_","isNextRow","rowOverlapped","_mousePosToVal","keyframesGroupOverlapped","groupElement","snapped","keyframePosRect","isMouseOver","extendedMouseRect","shrinkSelf","dist","includes","on","DragStarted","Drag","DragFinished","KeyframeChanged","Selected","Scroll","eventType","scrollEvent","scrollHeight","dragState","_getDragEventArgs","_preventDrag","forcePrevent","dragArgs","toStart","_setKeyframePos","prevPoint","draggableArguments","initialize","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","currentBounds","expectedKeyframeValue","newPosition","newValue","calculatedModel","nextRow","keyframeIndex","clickArgs","originalVal","startPos","_emitDragFinishedEvent","start","scrollStartPos","offsetX","newLeft","speedX","speedY","isLeft","isRight","isTop","isBottom","_startAutoPan","_checkUpdateSpeedTooFast","scrollSpeedMultiplier","stops","stepsFit","minSteps","minOffset"],"sourceRoot":""}